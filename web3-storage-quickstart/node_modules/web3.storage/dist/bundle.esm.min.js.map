{"version":3,"file":"bundle.esm.min.js","sources":["../../../node_modules/streaming-iterables/dist/index.mjs","../../../node_modules/retry/lib/retry_operation.js","../../../node_modules/retry/lib/retry.js","../../../node_modules/retry/index.js","../../../node_modules/p-retry/index.js","../../../node_modules/it-last/index.js","../../../node_modules/it-pipe/index.js","../../../node_modules/varint/encode.js","../../../node_modules/varint/decode.js","../../../node_modules/varint/length.js","../../../node_modules/varint/index.js","../../../node_modules/multiformats/esm/vendor/varint.js","../../../node_modules/multiformats/esm/src/varint.js","../../../node_modules/multiformats/esm/src/bytes.js","../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../node_modules/multiformats/esm/vendor/base-x.js","../../../node_modules/multiformats/esm/src/bases/base.js","../../../node_modules/multiformats/esm/src/bases/base58.js","../../../node_modules/multiformats/esm/src/bases/base32.js","../../../node_modules/multiformats/esm/src/cid.js","../../../node_modules/cborg/esm/lib/is.js","../../../node_modules/cborg/esm/lib/token.js","../../../node_modules/cborg/esm/lib/byte-utils.js","../../../node_modules/cborg/esm/lib/bl.js","../../../node_modules/cborg/esm/lib/common.js","../../../node_modules/cborg/esm/lib/0uint.js","../../../node_modules/cborg/esm/lib/1negint.js","../../../node_modules/cborg/esm/lib/2bytes.js","../../../node_modules/cborg/esm/lib/3string.js","../../../node_modules/cborg/esm/lib/4array.js","../../../node_modules/cborg/esm/lib/5map.js","../../../node_modules/cborg/esm/lib/6tag.js","../../../node_modules/cborg/esm/lib/7float.js","../../../node_modules/cborg/esm/lib/jump.js","../../../node_modules/cborg/esm/lib/encode.js","../../../node_modules/cborg/esm/lib/decode.js","../../../node_modules/@ipld/dag-cbor/esm/index.js","../../../node_modules/@ipld/car/esm/lib/decoder.js","../../../node_modules/@ipld/car/esm/lib/reader-browser.js","../../../node_modules/@ipld/car/esm/lib/iterator.js","../../../node_modules/@ipld/car/esm/lib/encoder.js","../../../node_modules/@ipld/car/esm/lib/iterator-channel.js","../../../node_modules/@ipld/car/esm/lib/writer-browser.js","../../../node_modules/it-batch/index.js","../../../node_modules/it-parallel-batch/index.js","../../../node_modules/is-plain-obj/index.js","../../../node_modules/merge-options/index.js","../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","../../../node_modules/murmurhash3js-revisited/index.js","../../../node_modules/multiformats/esm/src/bases/identity.js","../../../node_modules/multiformats/esm/src/bases/base2.js","../../../node_modules/multiformats/esm/src/bases/base8.js","../../../node_modules/multiformats/esm/src/bases/base10.js","../../../node_modules/multiformats/esm/src/bases/base16.js","../../../node_modules/multiformats/esm/src/bases/base36.js","../../../node_modules/multiformats/esm/src/bases/base64.js","../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../node_modules/multiformats/esm/src/codecs/raw.js","../../../node_modules/multiformats/esm/src/codecs/json.js","../../../node_modules/multiformats/esm/src/basics.js","../../../node_modules/uint8arrays/util/bases.js","../../../node_modules/uint8arrays/from-string.js","../../../node_modules/ipfs-unixfs-importer/src/options.js","../../../node_modules/@protobufjs/aspromise/index.js","../../../node_modules/@protobufjs/base64/index.js","../../../node_modules/@protobufjs/eventemitter/index.js","../../../node_modules/@protobufjs/float/index.js","../../../node_modules/@protobufjs/inquire/index.js","../../../node_modules/@protobufjs/utf8/index.js","../../../node_modules/@protobufjs/pool/index.js","../../../node_modules/protobufjs/src/util/longbits.js","../../../node_modules/protobufjs/src/util/minimal.js","../../../node_modules/protobufjs/src/writer.js","../../../node_modules/protobufjs/src/writer_buffer.js","../../../node_modules/protobufjs/src/reader.js","../../../node_modules/protobufjs/src/reader_buffer.js","../../../node_modules/protobufjs/src/rpc/service.js","../../../node_modules/protobufjs/src/rpc.js","../../../node_modules/protobufjs/src/roots.js","../../../node_modules/protobufjs/src/index-minimal.js","../../../node_modules/protobufjs/minimal.js","../../../node_modules/ipfs-unixfs-importer/node_modules/ipfs-unixfs/src/unixfs.js","../../../node_modules/err-code/index.js","../../../node_modules/ipfs-unixfs-importer/node_modules/ipfs-unixfs/src/index.js","../../../node_modules/@ipld/dag-pb/esm/src/pb-decode.js","../../../node_modules/@ipld/dag-pb/esm/src/pb-encode.js","../../../node_modules/@ipld/dag-pb/esm/src/util.js","../../../node_modules/@ipld/dag-pb/esm/src/index.js","../../../node_modules/ipfs-unixfs-importer/src/utils/persist.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/dir.js","../../../node_modules/it-all/index.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/file/flat.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/file/trickle.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/file/buffer-importer.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/file/index.js","../../../node_modules/bl/BufferList.js","../../../node_modules/rabin-wasm/src/rabin.js","../../../node_modules/@assemblyscript/loader/index.js","../../../node_modules/rabin-wasm/dist/rabin-wasm.js","../../../node_modules/rabin-wasm/src/index.js","../../../node_modules/ipfs-unixfs-importer/src/chunker/rabin.js","../../../node_modules/ipfs-unixfs-importer/src/chunker/fixed-size.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/validate-chunks.js","../../../node_modules/ipfs-unixfs-importer/src/dag-builder/index.js","../../../node_modules/ipfs-unixfs-importer/src/dir.js","../../../node_modules/ipfs-unixfs-importer/src/dir-flat.js","../../../node_modules/sparse-array/index.js","../../../node_modules/hamt-sharding/src/bucket.js","../../../node_modules/hamt-sharding/src/consumable-buffer.js","../../../node_modules/uint8arrays/concat.js","../../../node_modules/hamt-sharding/src/consumable-hash.js","../../../node_modules/hamt-sharding/src/index.js","../../../node_modules/ipfs-unixfs-importer/src/dir-sharded.js","../../../node_modules/ipfs-unixfs-importer/src/flat-to-shard.js","../../../node_modules/ipfs-unixfs-importer/src/utils/to-path-components.js","../../../node_modules/ipfs-unixfs-importer/src/tree-builder.js","../../../node_modules/ipfs-unixfs-importer/src/index.js","../../../node_modules/browser-readablestream-to-it/index.js","../../../node_modules/blob-to-it/index.js","../../../node_modules/it-peekable/index.js","../../../node_modules/it-map/index.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/utils.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.js","../../../node_modules/ipfs-unixfs/src/unixfs.js","../../../node_modules/ipfs-unixfs/src/index.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/normalise-input.js","../../../node_modules/ipfs-core-utils/src/files/normalise-input/index.js","../../../node_modules/it-drain/index.js","../../../node_modules/it-filter/index.js","../../../node_modules/it-take/index.js","../../../node_modules/interface-blockstore/src/adapter.js","../../../node_modules/interface-blockstore/src/errors.js","../../../node_modules/interface-blockstore/src/memory.js","../../../node_modules/interface-blockstore/src/index.js","../../../node_modules/ipfs-car/dist/esm/blockstore/memory.js","../../../node_modules/ipfs-car/dist/esm/pack/constants.js","../../../node_modules/ipfs-car/dist/esm/pack/index.js","../../../node_modules/xtend/immutable.js","../../../node_modules/parse-link-header/index.js","../../../node_modules/ipfs-unixfs-exporter/node_modules/ipfs-unixfs/src/unixfs.js","../../../node_modules/ipfs-unixfs-exporter/node_modules/ipfs-unixfs/src/index.js","../../../node_modules/ipfs-unixfs-exporter/src/utils/find-cid-in-shard.js","../../../node_modules/ipfs-unixfs-exporter/src/utils/extract-data-from-block.js","../../../node_modules/ipfs-unixfs-exporter/src/utils/validate-offset-and-length.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/file.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/index.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/raw.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/dag-cbor.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/identity.js","../../../node_modules/ipfs-unixfs-exporter/src/resolvers/index.js","../../../node_modules/ipfs-unixfs-exporter/src/index.js","../../../node_modules/uint8arrays/compare.js","../../../node_modules/uint8arrays/equals.js","../../../node_modules/uint8arrays/to-string.js","../../../node_modules/uint8arrays/xor.js","../../../node_modules/uint8arrays/index.js","../../../node_modules/ipfs-car/dist/esm/unpack/utils/verifying-get-only-blockstore.js","../../../node_modules/ipfs-car/dist/esm/unpack/index.js","../../../node_modules/multiformats/esm/src/block.js","../../../node_modules/carbites/esm/lib/treewalk/splitter.js","../../../node_modules/files-from-path/esm/src/index.browser.js","../src/platform.web.js","../src/lib.js"],"sourcesContent":["async function* _batch(size, iterable) {\n    let dataBatch = [];\n    for await (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction* _syncBatch(size, iterable) {\n    let dataBatch = [];\n    for (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction batch(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batch(size, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _batch(size, iterable);\n    }\n    return _syncBatch(size, iterable);\n}\n\nfunction getIterator(iterable) {\n    if (typeof iterable.next === 'function') {\n        return iterable;\n    }\n    if (typeof iterable[Symbol.iterator] === 'function') {\n        return iterable[Symbol.iterator]();\n    }\n    if (typeof iterable[Symbol.asyncIterator] === 'function') {\n        return iterable[Symbol.asyncIterator]();\n    }\n    throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n}\n\nfunction defer() {\n    let reject;\n    let resolve;\n    const promise = new Promise((resolveFunc, rejectFunc) => {\n        resolve = resolveFunc;\n        reject = rejectFunc;\n    });\n    return {\n        promise,\n        reject,\n        resolve,\n    };\n}\n\n/// <reference lib=\"esnext.asynciterable\" />\nfunction _buffer(size, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let reading = false;\n    let ended = false;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const readDeferred = readQueue.shift();\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                readDeferred.reject(error);\n            }\n            else {\n                readDeferred.resolve({ done: false, value });\n            }\n        }\n        while (readQueue.length > 0 && ended) {\n            const { resolve } = readQueue.shift();\n            resolve({ done: true, value: undefined });\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (resultQueue.length >= size) {\n            return;\n        }\n        reading = true;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n            }\n            else {\n                resultQueue.push({ value });\n            }\n        }\n        catch (error) {\n            ended = true;\n            resultQueue.push({ error });\n        }\n        fulfillReadQueue();\n        reading = false;\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length > 0) {\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                throw error;\n            }\n            fillQueue();\n            return { done: false, value };\n        }\n        if (ended) {\n            return { done: true, value: undefined }; // stupid ts\n        }\n        const deferred = defer();\n        readQueue.push(deferred);\n        fillQueue();\n        return deferred.promise;\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction* syncBuffer(size, iterable) {\n    const valueQueue = [];\n    let e;\n    try {\n        for (const value of iterable) {\n            valueQueue.push(value);\n            if (valueQueue.length <= size) {\n                continue;\n            }\n            yield valueQueue.shift();\n        }\n    }\n    catch (error) {\n        e = error;\n    }\n    for (const value of valueQueue) {\n        yield value;\n    }\n    if (e) {\n        throw e;\n    }\n}\nfunction buffer(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => buffer(size, curriedIterable);\n    }\n    if (size === 0) {\n        return iterable;\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _buffer(size, iterable);\n    }\n    return syncBuffer(size, iterable);\n}\n\nasync function _collect(iterable) {\n    const values = [];\n    for await (const value of iterable) {\n        values.push(value);\n    }\n    return values;\n}\nfunction collect(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _collect(iterable);\n    }\n    return Array.from(iterable);\n}\n\nasync function* _concat(iterables) {\n    for await (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction* _syncConcat(iterables) {\n    for (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction concat(...iterables) {\n    const hasAnyAsync = iterables.find(itr => itr[Symbol.asyncIterator] !== undefined);\n    if (hasAnyAsync) {\n        return _concat(iterables);\n    }\n    else {\n        return _syncConcat(iterables);\n    }\n}\n\nasync function _consume(iterable) {\n    for await (const val of iterable) {\n        // do nothing\n    }\n}\nfunction consume(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _consume(iterable);\n    }\n    for (const val of iterable) {\n        // do nothing\n    }\n}\n\nasync function* _filter(filterFunc, iterable) {\n    for await (const data of iterable) {\n        if (await filterFunc(data)) {\n            yield data;\n        }\n    }\n}\nfunction filter(filterFunc, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _filter(filterFunc, curriedIterable);\n    }\n    return _filter(filterFunc, iterable);\n}\n\nasync function* flatten(iterable) {\n    for await (const maybeItr of iterable) {\n        if (maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator])) {\n            yield* flatten(maybeItr);\n        }\n        else {\n            yield maybeItr;\n        }\n    }\n}\n\nasync function* _map(func, iterable) {\n    for await (const val of iterable) {\n        yield await func(val);\n    }\n}\nfunction map(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => _map(func, curriedIterable);\n    }\n    return _map(func, iterable);\n}\n\nfunction flatMap(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => flatMap(func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(map(func, iterable)));\n}\n\nfunction _flatTransform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            if (value && value[Symbol.asyncIterator]) {\n                for await (const asyncVal of value) {\n                    resultQueue.push(asyncVal);\n                }\n            }\n            else {\n                resultQueue.push(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction flatTransform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? flatTransform(concurrency, curriedFunc, curriedIterable)\n            : flatTransform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => flatTransform(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(_flatTransform(concurrency, func, iterable)));\n}\n\nasync function onceReadable(stream) {\n    return new Promise(resolve => {\n        stream.once('readable', () => {\n            resolve();\n        });\n    });\n}\nasync function* _fromStream(stream) {\n    while (true) {\n        const data = stream.read();\n        if (data !== null) {\n            yield data;\n            continue;\n        }\n        if (stream._readableState.ended) {\n            break;\n        }\n        await onceReadable(stream);\n    }\n}\nfunction fromStream(stream) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n        return stream;\n    }\n    return _fromStream(stream);\n}\n\nasync function* merge(...iterables) {\n    const sources = new Set(iterables.map(getIterator));\n    while (sources.size > 0) {\n        for (const iterator of sources) {\n            const nextVal = await iterator.next();\n            if (nextVal.done) {\n                sources.delete(iterator);\n            }\n            else {\n                yield nextVal.value;\n            }\n        }\n    }\n}\n\nfunction pipeline(firstFn, ...fns) {\n    let previousFn = firstFn();\n    for (const func of fns) {\n        previousFn = func(previousFn);\n    }\n    return previousFn;\n}\n\nasync function* _parallelMap(concurrency, func, iterable) {\n    let transformError = null;\n    const wrapFunc = value => ({\n        value: func(value),\n    });\n    const stopOnError = async function* (source) {\n        for await (const value of source) {\n            if (transformError) {\n                return;\n            }\n            yield value;\n        }\n    };\n    const output = pipeline(() => iterable, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency - 1));\n    const itr = getIterator(output);\n    while (true) {\n        const { value, done } = await itr.next();\n        if (done) {\n            break;\n        }\n        try {\n            const val = await value.value;\n            if (!transformError) {\n                yield val;\n            }\n        }\n        catch (error) {\n            transformError = error;\n        }\n    }\n    if (transformError) {\n        throw transformError;\n    }\n}\nfunction parallelMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => parallelMap(concurrency, curriedFunc, curriedIterable);\n    }\n    if (iterable === undefined) {\n        return curriedIterable => parallelMap(concurrency, func, curriedIterable);\n    }\n    if (concurrency === 1) {\n        return map(func, iterable);\n    }\n    return _parallelMap(concurrency, func, iterable);\n}\n\nfunction parallelFlatMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? parallelFlatMap(concurrency, curriedFunc, curriedIterable)\n            : parallelFlatMap(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => parallelFlatMap(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(parallelMap(concurrency, func, iterable)));\n}\n\n/// <reference lib=\"esnext.asynciterable\" />\nasync function* parallelMerge(...iterables) {\n    const inputs = iterables.map(getIterator);\n    const concurrentWork = new Set();\n    const values = new Map();\n    let lastError = null;\n    let errCb = null;\n    let valueCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDone = value => {\n        if (valueCb) {\n            valueCb(value);\n        }\n    };\n    const waitForQueue = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            reject(lastError);\n        }\n        if (values.size > 0) {\n            return resolve();\n        }\n        valueCb = resolve;\n        errCb = reject;\n    });\n    const queueNext = input => {\n        const nextVal = Promise.resolve(input.next()).then(async ({ done, value }) => {\n            if (!done) {\n                values.set(input, value);\n            }\n            concurrentWork.delete(nextVal);\n        });\n        concurrentWork.add(nextVal);\n        nextVal.then(notifyDone, notifyError);\n    };\n    for (const input of inputs) {\n        queueNext(input);\n    }\n    while (true) {\n        // We technically don't have to check `values.size` as the for loop should have emptied it\n        // However I haven't yet found specs verifying that behavior, only tests\n        // the guard in waitForQueue() checking for values is in place for the same reason\n        if (concurrentWork.size === 0 && values.size === 0) {\n            return;\n        }\n        await waitForQueue();\n        for (const [input, value] of values) {\n            values.delete(input);\n            yield value;\n            queueNext(input);\n        }\n    }\n}\n\nasync function _reduce(func, start, iterable) {\n    let value = start;\n    for await (const nextItem of iterable) {\n        value = await func(value, nextItem);\n    }\n    return value;\n}\nfunction reduce(func, start, iterable) {\n    if (start === undefined) {\n        return (curriedStart, curriedIterable) => curriedIterable ? _reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => reduce(func, start, curriedIterable);\n    }\n    return _reduce(func, start, iterable);\n}\n\nasync function* _take(count, iterable) {\n    let taken = 0;\n    for await (const val of iterable) {\n        yield await val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction* _syncTake(count, iterable) {\n    let taken = 0;\n    for (const val of iterable) {\n        yield val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction take(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => take(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _take(count, iterable);\n    }\n    return _syncTake(count, iterable);\n}\n\nasync function* _asyncTap(func, iterable) {\n    for await (const val of iterable) {\n        await func(val);\n        yield val;\n    }\n}\nfunction tap(func, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _asyncTap(func, curriedIterable);\n    }\n    return _asyncTap(func, iterable);\n}\n\nfunction addTime(a, b) {\n    let seconds = a[0] + b[0];\n    let nanoseconds = a[1] + b[1];\n    if (nanoseconds >= 1000000000) {\n        const remainder = nanoseconds % 1000000000;\n        seconds += (nanoseconds - remainder) / 1000000000;\n        nanoseconds = remainder;\n    }\n    return [seconds, nanoseconds];\n}\nasync function* _asyncTime(config, iterable) {\n    const itr = iterable[Symbol.asyncIterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = await itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction* _syncTime(config, iterable) {\n    const itr = iterable[Symbol.iterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction time(config = {}, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => time(config, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] !== undefined) {\n        return _asyncTime(config, iterable);\n    }\n    else {\n        return _syncTime(config, iterable);\n    }\n}\n\nfunction _transform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            resultQueue.push(value);\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction transform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? transform(concurrency, curriedFunc, curriedIterable)\n            : transform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => transform(concurrency, func, curriedIterable);\n    }\n    return _transform(concurrency, func, iterable);\n}\n\nasync function _writeToStream(stream, iterable) {\n    let lastError = null;\n    let errCb = null;\n    let drainCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDrain = () => {\n        if (drainCb) {\n            drainCb();\n        }\n    };\n    const cleanup = () => {\n        stream.removeListener('error', notifyError);\n        stream.removeListener('drain', notifyDrain);\n    };\n    stream.once('error', notifyError);\n    const waitForDrain = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            return reject(lastError);\n        }\n        stream.once('drain', notifyDrain);\n        drainCb = resolve;\n        errCb = reject;\n    });\n    for await (const value of iterable) {\n        if (stream.write(value) === false) {\n            await waitForDrain();\n        }\n        if (lastError) {\n            break;\n        }\n    }\n    cleanup();\n    if (lastError) {\n        throw lastError;\n    }\n}\nfunction writeToStream(stream, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _writeToStream(stream, curriedIterable);\n    }\n    return _writeToStream(stream, iterable);\n}\n\nexport { batch, buffer, collect, concat, consume, filter, flatMap, flatTransform, flatten, fromStream, getIterator, map, merge, parallelFlatMap, parallelMap, parallelMerge, pipeline, reduce, take, tap, time, transform, writeToStream };\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n","const rawPipe = (...fns) => {\n  let res\n  while (fns.length) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isIterable = obj => obj && (\n  typeof obj[Symbol.asyncIterator] === 'function' ||\n  typeof obj[Symbol.iterator] === 'function' ||\n  typeof obj.next === 'function' // Probably, right?\n)\n\nconst isDuplex = obj => obj && typeof obj.sink === 'function' && isIterable(obj.source)\n\nconst duplexPipelineFn = duplex => source => {\n  duplex.sink(source) // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n  return duplex.source\n}\n\nconst pipe = (...fns) => {\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    const duplex = fns[0]\n    fns[0] = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(fns[0])) {\n    const source = fns[0]\n    fns[0] = () => source\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nmodule.exports = pipe\nmodule.exports.pipe = pipe\nmodule.exports.rawPipe = rawPipe\nmodule.exports.isIterable = isIterable\nmodule.exports.isDuplex = isDuplex\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    const decoders = {\n      [this.prefix]: this,\n      ...decoder.decoders || { [decoder.prefix]: decoder }\n    };\n    return new ComposedDecoder(decoders);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    const other = decoder.decoders || { [decoder.prefix]: decoder };\n    return new ComposedDecoder({\n      ...this.decoders,\n      ...other\n    });\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.chunks = [];\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { toString } from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  return new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n}\nexport function decodeStringCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  let decoded;\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nconst cborEncoders = [];\ncborEncoders[Type.uint.major] = encodeUint;\ncborEncoders[Type.negint.major] = encodeNegint;\ncborEncoders[Type.bytes.major] = encodeBytes;\ncborEncoders[Type.string.major] = encodeString;\ncborEncoders[Type.array.major] = encodeArray;\ncborEncoders[Type.map.major] = encodeMap;\ncborEncoders[Type.tag.major] = encodeTag;\ncborEncoders[Type.float.major] = encodeFloat;\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nexport async function readHeader(reader) {\n  const length = await readVarint(reader);\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nasync function readBlockHead(reader) {\n  const start = reader.pos;\n  const length = await readVarint(reader) + (reader.pos - start);\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk.length === 0) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return new Uint8Array(0);\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nexport class CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nexport class CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  return {\n    version,\n    roots,\n    iterator: decoder.blocks()\n  };\n}","import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      await writer.write(bytes);\n    },\n    async close() {\n      return writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};","function noop() {\n}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}","import { CID } from 'multiformats/cid';\nimport {\n  createEncoder,\n  createHeader\n} from './encoder.js';\nimport { create as iteratorChannel } from './iterator-channel.js';\nimport {\n  bytesReader,\n  readHeader\n} from './decoder.js';\nexport class CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid = CID.asCID(block.cid);\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = bytesReader(bytes);\n    await readHeader(reader);\n    const newHeader = createHeader(roots);\n    if (reader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nexport class CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel();\n  const {writer, iterator} = iw;\n  const encoder = createEncoder(writer);\n  return {\n    encoder,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots);\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nexport const __browser = true;","'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  async digest(input) {\n    if (input instanceof Uint8Array) {\n      const digest = await this.encode(input);\n      return Digest.create(this.code, digest);\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","module.exports = require('./lib/murmurHash3js');\n","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './hasher.js';\nimport { coerce } from '../bytes.js';\nexport const identity = from({\n  name: 'identity',\n  code: 0,\n  encode: input => coerce(input)\n});","import { coerce } from '../bytes.js';\nconst raw = bytes => coerce(bytes);\nexport const {name, code, encode, decode} = {\n  name: 'raw',\n  code: 85,\n  decode: raw,\n  encode: raw\n};","export const {name, code, encode, decode} = {\n  name: 'json',\n  code: 512,\n  encode: json => new TextEncoder().encode(JSON.stringify(json)),\n  decode: bytes => JSON.parse(new TextDecoder().decode(bytes))\n};","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","  'use strict'\n\nconst { bases } = require('multiformats/basics')\n\n/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n */\n\n/**\n * @param {string} name\n * @param {string} prefix\n * @param {(buf: Uint8Array) => string} encode\n * @param {(str: string) => Uint8Array} decode\n * @returns {MultibaseCodec}\n */\nfunction createCodec (name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = new Uint8Array(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\n/**\n * @typedef {'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof bases } SupportedEncodings\n */\n\n/**\n * @type {Record<SupportedEncodings, MultibaseCodec>}\n */\nconst BASES = {\n  'utf8': string,\n  'utf-8': string,\n  'hex': bases.base16,\n  'latin1': ascii,\n  'ascii': ascii,\n  'binary': ascii,\n\n  ...bases\n}\n\nmodule.exports = BASES\n","'use strict'\n\nconst bases = require('./util/bases')\n\n/**\n * @typedef {import('./util/bases').SupportedEncodings} SupportedEncodings\n */\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {string} string\n * @param {SupportedEncodings} [encoding=utf8] - utf8, base16, base64, base64urlpad, etc\n * @returns {Uint8Array}\n */\nfunction fromString (string, encoding = 'utf8') {\n  const base = bases[encoding]\n\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`)\n}\n\nmodule.exports = fromString\n","'use strict'\n\nconst mergeOptions = require('merge-options').bind({ ignoreUndefined: true })\nconst { sha256 } = require('multiformats/hashes/sha2')\n// @ts-ignore - no types available\nconst mur = require('murmurhash3js-revisited')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n/**\n * @param {Uint8Array} buf\n */\nasync function hamtHashFn (buf) {\n  return uint8ArrayFromString(mur.x64.hash128(buf), 'base16')\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\n/**\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @type {ImporterOptions}\n */\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced', // 'flat', 'trickle'\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file', // 'raw'\n  cidVersion: 0,\n  progress: () => () => {},\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  // FIXME: This number is too big for JavaScript\n  // https://github.com/ipfs/go-ipfs-chunker/blob/d0125832512163708c0804a3cda060e21acddae4/rabin.go#L11\n  polynomial: 17437180132763653, // eslint-disable-line no-loss-of-precision\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 0x22,\n  hamtBucketBits: 8\n}\n\n/**\n * @param {UserImporterOptions} options\n * @returns {ImporterOptions}\n */\nmodule.exports = function (options = {}) {\n  return mergeOptions(defaultOptions, options)\n}\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\n$root.Data = (function() {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\n$root.UnixTime = (function() {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\n$root.Metadata = (function() {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nmodule.exports = $root;\n","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","'use strict'\n\nconst {\n  Data: PBData\n} = require('./unixfs')\nconst errcode = require('err-code')\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nfunction parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nfunction parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass Data {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new Data({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nmodule.exports = {\n  UnixFS: Data,\n  parseMode,\n  parseMtime\n}\n","const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}","const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];","import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}","import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};","'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst dagPb = require('@ipld/dag-pb')\nconst { sha256 } = require('multiformats/hashes/sha2')\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {import('../types').PersistOptions} options\n */\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb\n  }\n\n  if (!options.hasher) {\n    options.hasher = sha256\n  }\n\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1\n  }\n\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1\n  }\n\n  const multihash = await options.hasher.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, {\n      signal: options.signal\n    })\n  }\n\n  return cid\n}\n\nmodule.exports = persist\n","'use strict'\n\nconst { UnixFS } = require('ipfs-unixfs')\nconst persist = require('../utils/persist')\nconst { encode, prepare } = require('@ipld/dag-pb')\n\n/**\n * @typedef {import('../types').Directory} Directory\n */\n\n/**\n * @type {import('../types').UnixFSV1DagBuilder<Directory>}\n */\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  })\n\n  const buffer = encode(prepare({ Data: unixfs.marshal() }))\n  const cid = await persist(buffer, blockstore, options)\n  const path = item.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  }\n}\n\nmodule.exports = dirBuilder\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","'use strict'\n\nconst all = require('it-all')\n\n/**\n * @type {import('../../types').FileDAGBuilder}\n */\nmodule.exports = async function (source, reduce) {\n  return reduce(await all(source))\n}\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nfunction balanced (source, reduce, options) {\n  return reduceToParents(source, reduce, options)\n}\n\n/**\n * @type {FileDAGBuilder}\n */\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nmodule.exports = balanced\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @typedef {import('ipfs-unixfs').UnixFS} UnixFS\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').InProgressImportResult} InProgressImportResult\n * @typedef {import('../../types').TrickleDagNode} TrickleDagNode\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nmodule.exports = async function trickleStream (source, reduce, options) {\n  const root = new Root(options.layerRepeat)\n  let iteration = 0\n  let maxDepth = 1\n\n  /** @type {SubTree} */\n  let subTree = root\n\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce))\n      }\n\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++\n      }\n\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration)\n\n      iteration++\n    }\n\n    subTree.append(layer)\n  }\n\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce))\n  }\n\n  return root.reduce(reduce)\n}\n\nclass SubTree {\n  /**\n   * @param {number} maxDepth\n   * @param {number} layerRepeat\n   * @param {number} [iteration=0]\n   */\n  constructor (maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth\n    this.layerRepeat = layerRepeat\n    this.currentDepth = 1\n    this.iteration = iteration\n\n    /** @type {TrickleDagNode} */\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    }\n  }\n\n  isFull () {\n    if (!this.root.data) {\n      return false\n    }\n\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      // can descend\n      this._addNextNodeToParent(this.node)\n\n      return false\n    }\n\n    // try to find new node from node.parent\n    const distantRelative = this._findParent(this.node, this.currentDepth)\n\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative)\n\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * @param {TrickleDagNode} parent\n   */\n  _addNextNodeToParent (parent) {\n    this.parent = parent\n\n    // find site for new node\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    }\n\n    // @ts-ignore\n    parent.children.push(nextNode)\n\n    this.currentDepth = nextNode.depth\n    this.node = nextNode\n  }\n\n  /**\n   *\n   * @param {InProgressImportResult[]} layer\n   */\n  append (layer) {\n    this.node.data = layer\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return this._reduce(this.root, reduce)\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {Reducer} reduce\n   * @returns {Promise<InProgressImportResult>}\n   */\n  async _reduce (node, reduce) {\n    /** @type {InProgressImportResult[]} */\n    let children = []\n\n    if (node.children.length) {\n      children = await Promise.all(\n        node.children\n          // @ts-ignore\n          .filter(child => child.data)\n          // @ts-ignore\n          .map(child => this._reduce(child, reduce))\n      )\n    }\n\n    return reduce((node.data || []).concat(children))\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {number} depth\n   * @returns {TrickleDagNode | undefined}\n   */\n  _findParent (node, depth) {\n    const parent = node.parent\n\n    if (!parent || parent.depth === 0) {\n      return\n    }\n\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      // this layer is full, may be able to traverse to a different branch\n      return this._findParent(parent, depth)\n    }\n\n    return parent\n  }\n}\n\nclass Root extends SubTree {\n  /**\n   * @param {number} layerRepeat\n   */\n  constructor (layerRepeat) {\n    super(0, layerRepeat)\n\n    this.root.depth = 0\n    this.currentDepth = 1\n  }\n\n  /**\n   * @param {InProgressImportResult} child\n   */\n  addChild (child) {\n    this.root.children.push(child)\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return reduce((this.root.data || []).concat(this.root.children))\n  }\n}\n","'use strict'\n\nconst { UnixFS } = require('ipfs-unixfs')\nconst persist = require('../../utils/persist')\nconst dagPb = require('@ipld/dag-pb')\nconst raw = require('multiformats/codecs/raw')\n\n/**\n * @typedef {import('../../types').BufferImporter} BufferImporter\n */\n\n/**\n * @type {BufferImporter}\n */\nasync function * bufferImporter (file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path)\n      let unixfs\n\n      /** @type {import('../../types').PersistOptions} */\n      const opts = {\n        codec: dagPb,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      }\n\n      if (options.rawLeaves) {\n        opts.codec = raw\n        opts.cidVersion = 1\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer,\n          mtime: file.mtime,\n          mode: file.mode\n        })\n\n        buffer = dagPb.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        })\n      }\n\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      }\n    }\n  }\n}\n\nmodule.exports = bufferImporter\n","'use strict'\n\nconst errCode = require('err-code')\nconst { UnixFS } = require('ipfs-unixfs')\nconst persist = require('../../utils/persist')\nconst { encode, prepare } = require('@ipld/dag-pb')\nconst parallelBatch = require('it-parallel-batch')\nconst rawCodec = require('multiformats/codecs/raw')\nconst dagPb = require('@ipld/dag-pb')\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../types').File} File\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').DAGBuilder} DAGBuilder\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {{ [key: string]: FileDAGBuilder}}\n */\nconst dagBuilders = {\n  flat: require('./flat'),\n  balanced: require('./balanced'),\n  trickle: require('./trickle')\n}\n\n/**\n * @param {File} file\n * @param {Blockstore} blockstore\n * @param {ImporterOptions} options\n */\nasync function * buildFileBatch (file, blockstore, options) {\n  let count = -1\n  let previous\n  let bufferImporter\n\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter\n  } else {\n    bufferImporter = require('./buffer-importer')\n  }\n\n  for await (const entry of parallelBatch(bufferImporter(file, blockstore, options), options.blockWriteConcurrency)) {\n    count++\n\n    if (count === 0) {\n      previous = entry\n      continue\n    } else if (count === 1 && previous) {\n      yield previous\n      previous = null\n    }\n\n    yield entry\n  }\n\n  if (previous) {\n    previous.single = true\n    yield previous\n  }\n}\n\n/**\n * @param {File} file\n * @param {Blockstore} blockstore\n * @param {ImporterOptions} options\n */\nconst reduce = (file, blockstore, options) => {\n  /**\n   * @type {Reducer}\n   */\n  async function reducer (leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0]\n\n      if (leaf.cid.code === rawCodec.code && (file.mtime !== undefined || file.mode !== undefined)) {\n        // only one leaf node which is a buffer - we have metadata so convert it into a\n        // UnixFS entry otherwise we'll have nowhere to store the metadata\n        let buffer = await blockstore.get(leaf.cid)\n\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        })\n\n        buffer = encode(prepare({ Data: leaf.unixfs.marshal() }))\n\n        // // TODO vmx 2021-03-26: This is what the original code does, it checks\n        // // the multihash of the original leaf node and uses then the same\n        // // hasher. i wonder if that's really needed or if we could just use\n        // // the hasher from `options.hasher` instead.\n        // const multihash = mh.decode(leaf.cid.multihash.bytes)\n        // let hasher\n        // switch multihash {\n        //   case sha256.code {\n        //     hasher = sha256\n        //     break;\n        //   }\n        //   //case identity.code {\n        //   //  hasher = identity\n        //   //  break;\n        //   //}\n        //   default: {\n        //     throw new Error(`Unsupported hasher \"${multihash}\"`)\n        //   }\n        // }\n        leaf.cid = await persist(buffer, blockstore, {\n          ...options,\n          codec: dagPb,\n          hasher: options.hasher,\n          cidVersion: options.cidVersion\n        })\n        leaf.size = buffer.length\n      }\n\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      }\n    }\n\n    // create a parent node and add all the leaves\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    })\n\n    const links = leaves\n      .filter(leaf => {\n        if (leaf.cid.code === rawCodec.code && leaf.size) {\n          return true\n        }\n\n        if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n          return true\n        }\n\n        return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length)\n      })\n      .map((leaf) => {\n        if (leaf.cid.code === rawCodec.code) {\n          // node is a leaf buffer\n          f.addBlockSize(leaf.size)\n\n          return {\n            Name: '',\n            Tsize: leaf.size,\n            Hash: leaf.cid\n          }\n        }\n\n        if (!leaf.unixfs || !leaf.unixfs.data) {\n          // node is an intermediate node\n          f.addBlockSize((leaf.unixfs && leaf.unixfs.fileSize()) || 0)\n        } else {\n          // node is a unixfs 'file' leaf node\n          f.addBlockSize(leaf.unixfs.data.length)\n        }\n\n        return {\n          Name: '',\n          Tsize: leaf.size,\n          Hash: leaf.cid\n        }\n      })\n\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    }\n    const buffer = encode(prepare(node))\n    const cid = await persist(buffer, blockstore, options)\n\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    }\n  }\n\n  return reducer\n}\n\n/**\n * @type {import('../../types').UnixFSV1DagBuilder<File>}\n */\nfunction fileBuilder (file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy]\n\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${options.strategy}`), 'ERR_BAD_STRATEGY')\n  }\n\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options)\n}\n\nmodule.exports = fileBuilder\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","'use strict'\n\n// @ts-ignore\nconst BufferList = require('bl/BufferList')\n// @ts-ignore\nconst { create } = require('rabin-wasm')\nconst errcode = require('err-code')\n\n/**\n * @typedef {object} RabinOptions\n * @property {number} min\n * @property {number} max\n * @property {number} bits\n * @property {number} window\n * @property {number} polynomial\n */\n\n/**\n * @type {import('../types').Chunker}\n */\nmodule.exports = async function * rabinChunker (source, options) {\n  let min, max, avg\n\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize\n    min = options.minChunkSize\n    max = options.maxChunkSize\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE')\n  } else {\n    avg = options.avgChunkSize\n    min = avg / 3\n    max = avg + (avg / 2)\n  }\n\n  // validate min/max/avg in the same way as go\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE')\n  }\n\n  if (max < min) {\n    max = min\n  }\n\n  if (avg < min) {\n    avg = min\n  }\n\n  const sizepow = Math.floor(Math.log2(avg))\n\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk\n  }\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {RabinOptions} options\n */\nasync function * rabin (source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window)\n  const buffers = new BufferList()\n\n  for await (const chunk of source) {\n    buffers.append(chunk)\n\n    const sizes = r.fingerprint(chunk)\n\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i]\n      const buf = buffers.slice(0, size)\n      buffers.consume(size)\n\n      yield buf\n    }\n  }\n\n  if (buffers.length) {\n    yield buffers.slice(0)\n  }\n}\n","'use strict'\n\n// @ts-ignore\nconst BufferList = require('bl/BufferList')\n\n/**\n * @type {import('../types').Chunker}\n */\nmodule.exports = async function * fixedSizeChunker (source, options) {\n  let bl = new BufferList()\n  let currentLength = 0\n  let emitted = false\n  const maxChunkSize = options.maxChunkSize\n\n  for await (const buffer of source) {\n    bl.append(buffer)\n\n    currentLength += buffer.length\n\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize)\n      emitted = true\n\n      // throw away consumed bytes\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList()\n        currentLength = 0\n      } else {\n        const newBl = new BufferList()\n        newBl.append(bl.shallowSlice(maxChunkSize))\n        bl = newBl\n\n        // update our offset\n        currentLength -= maxChunkSize\n      }\n    }\n  }\n\n  if (!emitted || currentLength) {\n    // return any remaining bytes or an empty buffer\n    yield bl.slice(0, currentLength)\n  }\n}\n","'use strict'\n\nconst errCode = require('err-code')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @type {ChunkValidator}\n */\nasync function * validateChunks (source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString())\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content)\n    } else if (content instanceof Uint8Array) {\n      yield content\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n  }\n}\n\nmodule.exports = validateChunks\n","'use strict'\n\nconst dirBuilder = require('./dir')\nconst fileBuilder = require('./file')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../types').File} File\n * @typedef {import('../types').Directory} Directory\n * @typedef {import('../types').DAGBuilder} DAGBuilder\n * @typedef {import('../types').Chunker} Chunker\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @param {any} thing\n * @returns {thing is Iterable<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterable<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>} content\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction contentAsAsyncIterable (content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return (async function * () {\n        yield content\n      }())\n    } else if (isIterable(content)) {\n      return (async function * () {\n        yield * content\n      }())\n    } else if (isAsyncIterable(content)) {\n      return content\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n  }\n\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n}\n\n/**\n * @type {DAGBuilder}\n */\nasync function * dagBuilder (source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true\n      }\n\n      entry.path = entry.path\n        .split('/')\n        .filter(path => path && path !== '.')\n        .join('/')\n    }\n\n    if (entry.content) {\n      /**\n       * @type {Chunker}\n       */\n      let chunker\n\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker\n      } else if (options.chunker === 'rabin') {\n        chunker = require('../chunker/rabin')\n      } else {\n        chunker = require('../chunker/fixed-size')\n      }\n\n      /**\n       * @type {ChunkValidator}\n       */\n      let chunkValidator\n\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator\n      } else {\n        chunkValidator = require('./validate-chunks')\n      }\n\n      /** @type {File} */\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      }\n\n      yield () => fileBuilder(file, blockstore, options)\n    } else if (entry.path) {\n      /** @type {Directory} */\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      }\n\n      yield () => dirBuilder(dir, blockstore, options)\n    } else {\n      throw new Error('Import candidate must have content or path or both')\n    }\n  }\n}\n\nmodule.exports = dagBuilder\n","'use strict'\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {object} DirProps\n * @property {boolean} root\n * @property {boolean} dir\n * @property {string} path\n * @property {boolean} dirty\n * @property {boolean} flat\n * @property {Dir} [parent]\n * @property {string} [parentKey]\n * @property {import('ipfs-unixfs').UnixFS} [unixfs]\n * @property {number} [mode]\n * @property {import('ipfs-unixfs').Mtime} [mtime]\n */\nclass Dir {\n  /**\n   *\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    this.options = options || {}\n\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n\n    /** @type {CID | undefined} */\n    this.cid = undefined\n    /** @type {number | undefined} */\n    this.size = undefined\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) { }\n\n  /**\n   * @param {string} name\n   * @returns {Promise<InProgressImportResult | Dir | undefined>}\n   */\n  get (name) {\n    return Promise.resolve(this)\n  }\n\n  /**\n   * @returns {AsyncIterable<{ key: string, child: InProgressImportResult | Dir}>}\n   */\n  async * eachChildSeries () { }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) { }\n}\n\nmodule.exports = Dir\n","'use strict'\n\nconst { encode, prepare } = require('@ipld/dag-pb')\nconst { UnixFS } = require('ipfs-unixfs')\nconst Dir = require('./dir')\nconst persist = require('./utils/persist')\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./dir').DirProps} DirProps\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\nclass DirFlat extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {{ [key: string]: InProgressImportResult | Dir }} */\n    this._children = {}\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    this.cid = undefined\n    this.size = undefined\n\n    this._children[name] = value\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return Promise.resolve(this._children[name])\n  }\n\n  childCount () {\n    return Object.keys(this._children).length\n  }\n\n  directChildrenCount () {\n    return this.childCount()\n  }\n\n  onlyChild () {\n    return this._children[Object.keys(this._children)[0]]\n  }\n\n  async * eachChildSeries () {\n    const keys = Object.keys(this._children)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      yield {\n        key: key,\n        child: this._children[key]\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} block\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (block) {\n    const children = Object.keys(this._children)\n    const links = []\n\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]]\n\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry\n\n          yield child\n        }\n      }\n\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        })\n      }\n    }\n\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    })\n\n    /** @type {PBNode} */\n    const node = { Data: unixfs.marshal(), Links: links }\n    const buffer = encode(prepare(node))\n    const cid = await persist(buffer, block, this.options)\n    const size = buffer.length + node.Links.reduce(\n      /**\n       * @param {number} acc\n       * @param {PBLink} curr\n       */\n      (acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize),\n      0)\n\n    this.cid = cid\n    this.size = size\n\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    }\n  }\n}\n\nmodule.exports = DirFlat\n","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","'use strict'\n\n// @ts-ignore\nconst SparseArray = require('sparse-array')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('./consumable-hash').InfiniteHash} InfiniteHash\n * @typedef {import('../').UserBucketOptions} UserBucketOptions\n */\n\n/**\n * @template V\n * @typedef {object} BucketChild<V>\n * @property {string} key\n * @property {V} value\n * @property {InfiniteHash} hash\n */\n\n/**\n * @template B\n *\n * @typedef {object} SA<B>\n * @property {number} length\n * @property {() => B[]} compactArray\n * @property {(i: number) => B} get\n * @property {(i: number, value: B) => void} set\n * @property {<A> (fn: (acc: A, curr: B, index: number) => A, initial: A) => B} reduce\n * @property {(fn: (item: B) => boolean) => B | undefined} find\n * @property {() => number[]} bitField\n * @property {(i: number) => void} unset\n */\n\n/**\n * @template T\n *\n * @typedef {object} BucketPosition<T>\n * @property {Bucket<T>} bucket\n * @property {number} pos\n * @property {InfiniteHash} hash\n * @property {BucketChild<T>} [existingChild]\n */\n\n/**\n * @typedef {object} BucketOptions\n * @property {number} bits\n * @property {(value: Uint8Array | InfiniteHash) => InfiniteHash} hash\n */\n\n/**\n * @template T\n */\nclass Bucket {\n  /**\n   * @param {BucketOptions} options\n   * @param {Bucket<T>} [parent]\n   * @param {number} [posAtParent=0]\n   */\n  constructor (options, parent, posAtParent = 0) {\n    this._options = options\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    /** @type {SA<Bucket<T> | BucketChild<T>>} */\n    this._children = new SparseArray()\n\n    /** @type {string | null} */\n    this.key = null\n  }\n\n  /**\n   * @param {string} key\n   * @param {T} value\n   */\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  /**\n   * @param {string} key\n   */\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  leafCount () {\n    const children = this._children.compactArray()\n\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  /**\n   * @returns {Iterable<BucketChild<T>>}\n   */\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield * child.eachLeafSeries()\n      } else {\n        yield child\n      }\n    }\n\n    // this is necessary because tsc requires a @return annotation as it\n    // can't derive a return type due to the recursion, and eslint requires\n    // a return statement when there is a @return annotation\n    return []\n  }\n\n  /**\n   * @param {(value: BucketChild<T>, index: number) => T} map\n   * @param {(reduced: any) => any} reduce\n   */\n  serialize (map, reduce) {\n    /** @type {T[]} */\n    const acc = []\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, acc))\n  }\n\n  /**\n   * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n   * @param {(reduced: any) => Promise<any>} asyncReduce\n   */\n  asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  /**\n   * @param {string} key\n   * @returns {Promise<BucketChild<T> | undefined>}\n   */\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined\n    }\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findPlace (key) {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n\n    if (place.existingChild && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash)\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  /**\n   * @param {BucketPosition<T>} place\n   * @param {string} key\n   * @param {T} value\n   */\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  /**\n   * @param {number} pos\n   * @param {Bucket<T> | BucketChild<T>} object\n   */\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  /**\n   * @param {number} pos\n   */\n  _delAt (pos) {\n    if (pos === -1) {\n      throw new Error('Invalid position')\n    }\n\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (onlyChild && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash,\n            bucket: this._parent\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @returns {BucketChild<T> | Bucket<T> | undefined}\n   */\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\n/**\n * @param {any} o\n */\nfunction exists (o) {\n  return Boolean(o)\n}\n\n/**\n *\n * @param {*} node\n * @param {number} index\n */\nfunction mapNode (node, index) {\n  return node.key\n}\n\n/**\n * @param {*} nodes\n */\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\n/**\n * @template T\n *\n * @param {Bucket<T>} bucket\n * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n * @param {(reduced: any) => Promise<any>} asyncReduce\n */\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n  }\n\n  return asyncReduce(output)\n}\n\nmodule.exports = Bucket\n","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","'use strict'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\nfunction concat (arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = concat\n","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\n/**\n * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n */\nfunction wrapHash (hashFn) {\n  /**\n   * @param {InfiniteHash | Uint8Array} value\n   */\n  function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nclass InfiniteHash {\n  /**\n   *\n   * @param {Uint8Array} value\n   * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n   */\n  constructor (value, hashFn) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n\n    /** @type {ConsumableBuffer[]} */\n    this._buffers = []\n  }\n\n  /**\n   * @param {number} bits\n   */\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n\nmodule.exports = wrapHash\nmodule.exports.InfiniteHash = InfiniteHash\n","'use strict'\n\nconst Bucket = require('./bucket')\nconst wrapHash = require('./consumable-hash')\n\n/**\n * @typedef {object} UserBucketOptions\n * @property {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n * @property {number} [bits=8]\n */\n\n/**\n * @param {UserBucketOptions} options\n */\nfunction createHAMT (options) {\n  if (!options || !options.hashFn) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits || 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket(bucketOptions)\n}\n\nmodule.exports = {\n  createHAMT,\n  Bucket\n}\n","'use strict'\n\nconst { encode, prepare } = require('@ipld/dag-pb')\nconst { UnixFS } = require('ipfs-unixfs')\nconst Dir = require('./dir')\nconst persist = require('./utils/persist')\nconst { createHAMT, Bucket } = require('hamt-sharding')\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @typedef {import('./dir').DirProps} DirProps\n */\n\nclass DirSharded extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {Bucket<InProgressImportResult | Dir>} */\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      }\n    }\n  }\n}\n\nmodule.exports = DirSharded\n\n/**\n * @param {Bucket<?>} bucket\n * @param {Blockstore} blockstore\n * @param {*} shardRoot\n * @param {ImporterOptions} options\n * @returns {AsyncIterable<ImportResult>}\n */\nasync function * flush (bucket, blockstore, shardRoot, options) {\n  const children = bucket._children\n  const links = []\n  let childrenSize = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard\n      }\n\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      })\n      childrenSize += shard.size\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      })\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (!value.cid) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      })\n      childrenSize += size\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  })\n\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  }\n  const buffer = encode(prepare(node))\n  const cid = await persist(buffer, blockstore, options)\n  const size = buffer.length + childrenSize\n\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  }\n}\n","'use strict'\n\nconst DirSharded = require('./dir-sharded')\nconst DirFlat = require('./dir-flat')\n\n/**\n * @typedef {import('./dir')} Dir\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @param {Dir | null} child\n * @param {Dir} dir\n * @param {number} threshold\n * @param {ImporterOptions} options\n * @returns {Promise<DirSharded>}\n */\nmodule.exports = async function flatToShard (child, dir, threshold, options) {\n  let newDir = dir\n\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options)\n  }\n\n  const parent = newDir.parent\n\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir\n      }\n\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found')\n      }\n\n      await parent.put(newDir.parentKey, newDir)\n    }\n\n    return flatToShard(newDir, parent, threshold, options)\n  }\n\n  // @ts-ignore\n  return newDir\n}\n\n/**\n * @param {DirFlat} oldDir\n * @param {ImporterOptions} options\n */\nasync function convertToShard (oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options)\n\n  for await (const { key, child } of oldDir.eachChildSeries()) {\n    await newDir.put(key, child)\n  }\n\n  return newDir\n}\n","'use strict'\n\nconst toPathComponents = (path = '') => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n\nmodule.exports = toPathComponents\n","'use strict'\n\nconst DirFlat = require('./dir-flat')\nconst flatToShard = require('./flat-to-shard')\nconst Dir = require('./dir')\nconst toPathComponents = require('./utils/to-path-components')\n\n/**\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {(source: AsyncIterable<InProgressImportResult>, blockstore: Blockstore, options: ImporterOptions) => AsyncIterable<ImportResult>} TreeBuilder\n */\n\n/**\n * @param {InProgressImportResult} elem\n * @param {Dir} tree\n * @param {ImporterOptions} options\n */\nasync function addToTree (elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '')\n  const lastIndex = pathElems.length - 1\n  let parent = tree\n  let currentPath = ''\n\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i]\n\n    currentPath += `${currentPath ? '/' : ''}${pathElem}`\n\n    const last = (i === lastIndex)\n    parent.dirty = true\n    parent.cid = undefined\n    parent.size = undefined\n\n    if (last) {\n      await parent.put(pathElem, elem)\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options)\n    } else {\n      let dir = await parent.get(pathElem)\n\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options)\n      }\n\n      await parent.put(pathElem, dir)\n\n      parent = dir\n    }\n  }\n\n  return tree\n}\n\n/**\n * @param {Dir | InProgressImportResult} tree\n * @param {Blockstore} blockstore\n */\nasync function * flushAndYield (tree, blockstore) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree\n    }\n\n    return\n  }\n\n  yield * tree.flush(blockstore)\n}\n\n/**\n * @type {TreeBuilder}\n */\nasync function * treeBuilder (source, block, options) {\n  /** @type {Dir} */\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options)\n\n  for await (const entry of source) {\n    if (!entry) {\n      continue\n    }\n\n    tree = await addToTree(entry, tree, options)\n\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry\n    }\n  }\n\n  if (options.wrapWithDirectory) {\n    yield * flushAndYield(tree, block)\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue\n      }\n\n      yield * flushAndYield(unwrapped.child, block)\n    }\n  }\n}\n\nmodule.exports = treeBuilder\n","'use strict'\n\nconst parallelBatch = require('it-parallel-batch')\nconst defaultOptions = require('./options')\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').ImportCandidate} ImportCandidate\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').Directory} Directory\n * @typedef {import('./types').File} File\n * @typedef {import('./types').ImportResult} ImportResult\n *\n * @typedef {import('./types').Chunker} Chunker\n * @typedef {import('./types').DAGBuilder} DAGBuilder\n * @typedef {import('./types').TreeBuilder} TreeBuilder\n * @typedef {import('./types').BufferImporter} BufferImporter\n * @typedef {import('./types').ChunkValidator} ChunkValidator\n * @typedef {import('./types').Reducer} Reducer\n * @typedef {import('./types').ProgressHandler} ProgressHandler\n */\n\n/**\n * @param {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate> | ImportCandidate} source\n * @param {Blockstore} blockstore\n * @param {UserImporterOptions} options\n */\nasync function * importer (source, blockstore, options = {}) {\n  const opts = defaultOptions(options)\n\n  let dagBuilder\n\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder\n  } else {\n    dagBuilder = require('./dag-builder')\n  }\n\n  let treeBuilder\n\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder\n  } else {\n    treeBuilder = require('./tree-builder')\n  }\n\n  /** @type {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate>} */\n  let candidates\n\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    // @ts-ignore\n    candidates = source\n  } else {\n    // @ts-ignore\n    candidates = [source]\n  }\n\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    }\n  }\n}\n\nmodule.exports = {\n  importer\n}\n","'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n","/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n","'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","'use strict'\n\nconst { Blob } = globalThis\n\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nfunction isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is Blob}\n */\nfunction isBlob (obj) {\n  return typeof Blob !== 'undefined' && obj instanceof Blob\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n\nmodule.exports = {\n  isBytes,\n  isBlob,\n  isFileObject,\n  isReadableStream\n}\n","'use strict'\n\nconst errCode = require('err-code')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst blobToIt = require('blob-to-it')\nconst itPeekable = require('it-peekable')\nconst all = require('it-all')\nconst map = require('it-map')\nconst {\n  isBytes,\n  isReadableStream,\n  isBlob\n} = require('./utils')\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nasync function * toAsyncIterable (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    yield toBytes(input)\n    return\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    yield toBytes(input.toString())\n    return\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    yield * blobToIt(input)\n    return\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      yield Uint8Array.from((await all(peekable)))\n      return\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield * map(peekable, toBytes)\n      return\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n\nmodule.exports = toAsyncIterable\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\n$root.Data = (function() {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\n$root.UnixTime = (function() {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\n$root.Metadata = (function() {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\nconst {\n  Data: PBData\n} = require('./unixfs')\nconst errcode = require('err-code')\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nfunction parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nfunction parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass Data {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new Data({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nmodule.exports = {\n  UnixFS: Data,\n  parseMode,\n  parseMtime\n}\n","'use strict'\n\nconst errCode = require('err-code')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst itPeekable = require('it-peekable')\nconst map = require('it-map')\nconst {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} = require('./utils')\nconst {\n  parseMtime,\n  parseMode\n} = require('ipfs-unixfs')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * @param {import('ipfs-core-types/src/utils').ImportCandidateStream} input\n * @param {(content:ToContent) => AsyncIterable<Uint8Array>} normaliseContent\n */\n// eslint-disable-next-line complexity\nmodule.exports = async function * normaliseInput (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    return\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value) || isBytes(value)) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<Blob>\n    // (Async)Iterable<String>\n    // (Async)Iterable<{ path, content }>\n    if (isFileObject(value) || isBlob(value) || typeof value === 'string' || value instanceof String) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if (value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value)) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js streams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => AsyncIterable<Uint8Array>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-ignore - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-ignore - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","'use strict'\n\nconst normaliseContent = require('./normalise-content')\nconst normaliseInput = require('./normalise-input')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<ImportCandidate, void, undefined>}\n */\nmodule.exports = (input) => normaliseInput(input, normaliseContent)\n","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n","'use strict'\n\nconst drain = require('it-drain')\nconst filter = require('it-filter')\nconst take = require('it-take')\nconst all = require('it-all')\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nconst sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Blockstore} Blockstore\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').KeyQuery} KeyQuery\n * @typedef {import('./types').Batch} Batch\n *\n * @typedef {import('multiformats').CID} CID\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Blockstore}\n */\nclass BlockstoreAdapter {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {CID[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {Pair} */ e) =>\n        e.key.toString().startsWith(q.prefix || '')\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= (q.offset || 0))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {CID} */ cid) => cid.toString().startsWith(q.prefix || ''))\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n\nmodule.exports = BlockstoreAdapter\n","'use strict'\n\nconst errCode = require('err-code')\n\n/**\n * @param {Error} [err]\n */\nfunction notFoundError (err) {\n  err = err || new Error('Not Found')\n  return errCode(err, 'ERR_NOT_FOUND')\n}\n\nmodule.exports = {\n  notFoundError\n}\n","'use strict'\n\nconst Adapter = require('./adapter')\nconst { base32 } = require('multiformats/bases/base32')\nconst raw = require('multiformats/codecs/raw')\nconst { CID } = require('multiformats/cid')\nconst Digest = require('multiformats/hashes/digest')\nconst Errors = require('./errors')\n\n/**\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Blockstore} Blockstore\n * @typedef {import('interface-store').Options} Options\n */\n\n/**\n * @class MemoryBlockstore\n * @implements {Blockstore}\n */\nclass MemoryBlockstore extends Adapter {\n  constructor () {\n    super()\n\n    /** @type {Record<string, Uint8Array>} */\n    this.data = {}\n  }\n\n  open () {\n    return Promise.resolve()\n  }\n\n  close () {\n    return Promise.resolve()\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Uint8Array} val\n   */\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[base32.encode(key.multihash.bytes)] = val\n  }\n\n  /**\n   * @param {CID} key\n   */\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[base32.encode(key.multihash.bytes)]\n  }\n\n  /**\n   * @param {CID} key\n   */\n  async has (key) { // eslint-disable-line require-await\n    return this.data[base32.encode(key.multihash.bytes)] !== undefined\n  }\n\n  /**\n   * @param {CID} key\n   */\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[base32.encode(key.multihash.bytes)]\n  }\n\n  async * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: CID.createV1(raw.code, Digest.decode(base32.decode(key))), value }))\n  }\n\n  async * _allKeys () {\n    yield * Object.entries(this.data)\n      .map(([key]) => CID.createV1(raw.code, Digest.decode(base32.decode(key))))\n  }\n}\n\nmodule.exports = MemoryBlockstore\n","'use strict'\n\nconst BlockstoreAdapter = require('./adapter')\nconst MemoryBlockstore = require('./memory')\n\n/**\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Batch} Batch\n * @typedef {import('./types').Blockstore} Blockstore\n * @typedef {import('./types').QueryFilter} QueryFilter\n * @typedef {import('./types').QueryOrder} QueryOrder\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('./types').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('./types').KeyQuery} KeyQuery\n */\n\nmodule.exports = {\n  BlockstoreAdapter,\n  MemoryBlockstore\n}\n","import { CID } from 'multiformats';\nimport { BlockstoreAdapter } from 'interface-blockstore';\nexport class MemoryBlockStore extends BlockstoreAdapter {\n    constructor() {\n        super();\n        this.store = new Map();\n    }\n    async *blocks() {\n        for (const [cidStr, bytes] of this.store.entries()) {\n            yield { cid: CID.parse(cidStr), bytes };\n        }\n    }\n    put(cid, bytes) {\n        this.store.set(cid.toString(), bytes);\n        return Promise.resolve();\n    }\n    get(cid) {\n        const bytes = this.store.get(cid.toString());\n        if (!bytes) {\n            throw new Error(`block with cid ${cid.toString()} no found`);\n        }\n        return Promise.resolve(bytes);\n    }\n    close() {\n        this.store.clear();\n        return Promise.resolve();\n    }\n}\n","import { sha256 } from 'multiformats/hashes/sha2';\nexport const unixfsImporterOptionsDefault = {\n    cidVersion: 1,\n    chunker: 'fixed',\n    maxChunkSize: 262144,\n    hasher: sha256,\n    rawLeaves: true,\n    wrapWithDirectory: true,\n    maxChildrenPerNode: 174\n};\n","import last from 'it-last';\nimport pipe from 'it-pipe';\nimport { CarWriter } from '@ipld/car';\nimport { importer } from 'ipfs-unixfs-importer';\nimport normalizeAddInput from 'ipfs-core-utils/src/files/normalise-input/index.js';\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\nimport { unixfsImporterOptionsDefault } from \"./constants.js\";\nexport async function pack({ input, blockstore: userBlockstore, hasher, maxChunkSize, maxChildrenPerNode, wrapWithDirectory }) {\n    if (!input || (Array.isArray(input) && !input.length)) {\n        throw new Error('missing input file(s)');\n    }\n    const blockstore = userBlockstore ? userBlockstore : new MemoryBlockStore();\n    // Consume the source\n    const rootEntry = await last(pipe(normalizeAddInput(input), (source) => importer(source, blockstore, {\n        ...unixfsImporterOptionsDefault,\n        hasher: hasher || unixfsImporterOptionsDefault.hasher,\n        maxChunkSize: maxChunkSize || unixfsImporterOptionsDefault.maxChunkSize,\n        maxChildrenPerNode: maxChildrenPerNode || unixfsImporterOptionsDefault.maxChildrenPerNode,\n        wrapWithDirectory: wrapWithDirectory === false ? false : unixfsImporterOptionsDefault.wrapWithDirectory\n    })));\n    if (!rootEntry || !rootEntry.cid) {\n        throw new Error('given input could not be parsed correctly');\n    }\n    const root = rootEntry.cid;\n    const { writer, out } = await CarWriter.create([root]);\n    for await (const block of blockstore.blocks()) {\n        writer.put(block);\n    }\n    writer.close();\n    if (!userBlockstore) {\n        await blockstore.close();\n    }\n    return { root, out };\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\n\nvar qs = require('querystring')\n  , url = require('url')\n  , xtend = require('xtend');\n\nfunction hasRel(x) {\n  return x && x.rel;\n}\n\nfunction intoRels (acc, x) {\n  function splitRel (rel) {\n    acc[rel] = xtend(x, { rel: rel });\n  }\n\n  x.rel.split(/\\s+/).forEach(splitRel);\n\n  return acc;\n}\n\nfunction createObjects (acc, p) {\n  // rel=\"next\" => 1: rel 2: next\n  var m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/)\n  if (m) acc[m[1]] = m[2];\n  return acc;\n}\n\nfunction parseLink(link) {\n  try {\n    var m         =  link.match(/<?([^>]*)>(.*)/)\n      , linkUrl   =  m[1]\n      , parts     =  m[2].split(';')\n      , parsedUrl =  url.parse(linkUrl)\n      , qry       =  qs.parse(parsedUrl.query);\n\n    parts.shift();\n\n    var info = parts\n      .reduce(createObjects, {});\n    \n    info = xtend(qry, info);\n    info.url = linkUrl;\n    return info;\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = function (linkHeader) {\n  if (!linkHeader) return null;\n\n  return linkHeader.split(/,\\s*</)\n   .map(parseLink)\n   .filter(hasRel)\n   .reduce(intoRels, {});\n};\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\n$root.Data = (function() {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\n$root.UnixTime = (function() {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\n$root.Metadata = (function() {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nmodule.exports = $root;\n","'use strict'\n\nconst {\n  Data: PBData\n} = require('./unixfs')\nconst errcode = require('err-code')\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nfunction parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nfunction parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass Data {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new Data({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nmodule.exports = {\n  UnixFS: Data,\n  parseMode,\n  parseMtime\n}\n","'use strict'\n\nconst { Bucket, createHAMT } = require('hamt-sharding')\nconst { decode } = require('@ipld/dag-pb')\n// @ts-ignore - no types available\nconst mur = require('murmurhash3js-revisited')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n// FIXME: this is copy/pasted from ipfs-unixfs-importer/src/options.js\n/**\n * @param {Uint8Array} buf\n */\nconst hashFn = async function (buf) {\n  return uint8ArrayFromString(mur.x64.hash128(buf), 'base16').slice(0, 8).reverse()\n}\n\n/**\n * @param {PBLink[]} links\n * @param {Bucket<boolean>} bucket\n * @param {Bucket<boolean>} rootBucket\n */\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(\n    links.map(link => {\n      if (link.Name == null) {\n        // TODO(@rvagg): what do? this is technically possible\n        throw new Error('Unexpected Link without a Name')\n      }\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        return bucket._putObjectAt(pos, new Bucket({\n          hash: rootBucket._options.hash,\n          bits: rootBucket._options.bits\n        }, bucket, pos))\n      }\n\n      return rootBucket.put(link.Name.substring(2), true)\n    })\n  )\n}\n\n/**\n * @param {number} position\n */\nconst toPrefix = (position) => {\n  return position\n    .toString(16)\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\n/**\n * @param {import('hamt-sharding').Bucket.BucketPosition<boolean>} position\n */\nconst toBucketPath = (position) => {\n  let bucket = position.bucket\n  const path = []\n\n  while (bucket._parent) {\n    path.push(bucket)\n\n    bucket = bucket._parent\n  }\n\n  path.push(bucket)\n\n  return path.reverse()\n}\n\n/**\n * @typedef {object} ShardTraversalContext\n * @property {number} hamtDepth\n * @property {Bucket<boolean>} rootBucket\n * @property {Bucket<boolean>} lastBucket\n *\n * @param {PBNode} node\n * @param {string} name\n * @param {Blockstore} blockstore\n * @param {ShardTraversalContext} [context]\n * @param {ExporterOptions} [options]\n * @returns {Promise<CID|null>}\n */\nconst findShardCid = async (node, name, blockstore, context, options) => {\n  if (!context) {\n    const rootBucket = createHAMT({\n      hashFn\n    })\n\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    }\n  }\n\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket)\n\n  const position = await context.rootBucket._findNewBucketAndPos(name)\n  let prefix = toPrefix(position.pos)\n  const bucketPath = toBucketPath(position)\n\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth]\n\n    prefix = toPrefix(context.lastBucket._posAtParent)\n  }\n\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false\n    }\n\n    const entryPrefix = link.Name.substring(0, 2)\n    const entryName = link.Name.substring(2)\n\n    if (entryPrefix !== prefix) {\n      // not the entry or subshard we're looking for\n      return false\n    }\n\n    if (entryName && entryName !== name) {\n      // not the entry we're looking for\n      return false\n    }\n\n    return true\n  })\n\n  if (!link) {\n    return null\n  }\n\n  if (link.Name != null && link.Name.substring(2) === name) {\n    return link.Hash\n  }\n\n  context.hamtDepth++\n\n  const block = await blockstore.get(link.Hash, options)\n  node = decode(block)\n\n  return findShardCid(node, name, blockstore, context, options)\n}\n\nmodule.exports = findShardCid\n","'use strict'\n\n/**\n * @param {Uint8Array} block\n * @param {number} blockStart\n * @param {number} requestedStart\n * @param {number} requestedEnd\n */\nmodule.exports = function extractDataFromBlock (block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length\n  const blockEnd = blockStart + blockLength\n\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    // If we are looking for a byte range that is starts after the start of the block,\n    // return an empty block.  This can happen when internal nodes contain data\n    return new Uint8Array(0)\n  }\n\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    // If the end byte is in the current block, truncate the block to the end byte\n    block = block.slice(0, requestedEnd - blockStart)\n  }\n\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    // If the start byte is in the current block, skip to the start byte\n    block = block.slice(requestedStart - blockStart)\n  }\n\n  return block\n}\n","'use strict'\n\nconst errCode = require('err-code')\n\n/**\n * @param {number} size\n * @param {number} [offset]\n * @param {number} [length]\n */\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (!length && length !== 0) {\n    length = size - offset\n  }\n\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset + length > size) {\n    length = size - offset\n  }\n\n  return {\n    offset,\n    length\n  }\n}\n\nmodule.exports = validateOffsetAndLength\n","'use strict'\n\nconst extractDataFromBlock = require('../../../utils/extract-data-from-block')\nconst validateOffsetAndLength = require('../../../utils/validate-offset-and-length')\nconst { UnixFS } = require('ipfs-unixfs')\nconst errCode = require('err-code')\nconst dagPb = require('@ipld/dag-pb')\nconst dagCbor = require('@ipld/dag-cbor')\nconst raw = require('multiformats/codecs/raw')\n\n/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n *\n * @param {Blockstore} blockstore\n * @param {PBNode} node\n * @param {number} start\n * @param {number} end\n * @param {number} streamPosition\n * @param {ExporterOptions} options\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * emitBytes (blockstore, node, start, end, streamPosition = 0, options) {\n  // a `raw` node\n  if (node instanceof Uint8Array) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end)\n\n    if (buf.length) {\n      yield buf\n    }\n\n    streamPosition += buf.length\n\n    return streamPosition\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  let file\n\n  try {\n    file = UnixFS.unmarshal(node.Data)\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  // might be a unixfs `raw` node or have data on intermediate nodes\n  if (file.data && file.data.length) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end)\n\n    if (buf.length) {\n      yield buf\n    }\n\n    streamPosition += file.data.length\n  }\n\n  let childStart = streamPosition\n\n  // work out which child nodes contain the requested data\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i]\n    const childEnd = streamPosition + file.blockSizes[i]\n\n    if ((start >= childStart && start < childEnd) || // child has offset byte\n        (end > childStart && end <= childEnd) || // child has end byte\n        (start < childStart && end > childEnd)) { // child is between offset and end bytes\n      const block = await blockstore.get(childLink.Hash, {\n        signal: options.signal\n      })\n      let child\n      switch (childLink.Hash.code) {\n        case dagPb.code:\n          child = await dagPb.decode(block)\n          break\n        case raw.code:\n          child = block\n          break\n        case dagCbor.code:\n          child = await dagCbor.decode(block)\n          break\n        default:\n          throw Error(`Unsupported codec: ${childLink.Hash.code}`)\n      }\n\n      for await (const buf of emitBytes(blockstore, child, start, end, streamPosition, options)) {\n        streamPosition += buf.length\n\n        yield buf\n      }\n    }\n\n    streamPosition = childEnd\n    childStart = childEnd + 1\n  }\n}\n\n/**\n * @type {import('../').UnixfsV1Resolver}\n */\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  function yieldFileContent (options = {}) {\n    const fileSize = unixfs.fileSize()\n\n    if (fileSize === undefined) {\n      throw new Error('File was a directory')\n    }\n\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(fileSize, options.offset, options.length)\n\n    const start = offset\n    const end = offset + length\n\n    return emitBytes(blockstore, node, start, end, 0, options)\n  }\n\n  return yieldFileContent\n}\n\nmodule.exports = fileContent\n","'use strict'\n\n/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} [options]\n   * @returns {UnixfsV1DirectoryContent}\n   */\n  async function * yieldDirectoryContent (options = {}) {\n    const offset = options.offset || 0\n    const length = options.length || node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${path}/${link.Name || ''}`, [], depth + 1, blockstore, options)\n\n      if (result.entry) {\n        yield result.entry\n      }\n    }\n  }\n\n  return yieldDirectoryContent\n}\n\nmodule.exports = directoryContent\n","'use strict'\n\nconst { decode } = require('@ipld/dag-pb')\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').Resolve} Resolve\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} options\n   *\n   */\n  function yieldHamtDirectoryContent (options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options)\n  }\n\n  return yieldHamtDirectoryContent\n}\n\n/**\n * @param {PBNode} node\n * @param {string} path\n * @param {Resolve} resolve\n * @param {number} depth\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} options\n *\n * @returns {UnixfsV1DirectoryContent}\n */\nasync function * listDirectory (node, path, resolve, depth, blockstore, options) {\n  const links = node.Links\n\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null\n\n    if (name) {\n      const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, blockstore, options)\n\n      yield result.entry\n    } else {\n      // descend into subshard\n      const block = await blockstore.get(link.Hash)\n      node = decode(block)\n\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file\n      }\n    }\n  }\n}\n\nmodule.exports = hamtShardedDirectoryContent\n","'use strict'\n\nconst errCode = require('err-code')\nconst { UnixFS } = require('ipfs-unixfs')\nconst findShardCid = require('../../utils/find-cid-in-shard')\nconst { decode } = require('@ipld/dag-pb')\n\n/**\n * @typedef {import('../../types').Resolve} Resolve\n * @typedef {import('../../types').Resolver} Resolver\n * @typedef {import('../../types').UnixfsV1Resolver} UnixfsV1Resolver\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n */\n\n/**\n * @param {PBNode} node\n * @param {string} name\n */\nconst findLinkCid = (node, name) => {\n  const link = node.Links.find(link => link.Name === name)\n\n  return link && link.Hash\n}\n\n/**\n * @type {{ [key: string]: UnixfsV1Resolver }}\n */\nconst contentExporters = {\n  raw: require('./content/file'),\n  file: require('./content/file'),\n  directory: require('./content/directory'),\n  'hamt-sharded-directory': require('./content/hamt-sharded-directory'),\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  }\n}\n\n/**\n * @type {Resolver}\n */\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options)\n  const node = decode(block)\n  let unixfs\n  let next\n\n  if (!name) {\n    name = cid.toString()\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  try {\n    unixfs = UnixFS.unmarshal(node.Data)\n  } catch (err) {\n    // non-UnixFS dag-pb node? It could happen.\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  if (!path) {\n    path = name\n  }\n\n  if (toResolve.length) {\n    let linkCid\n\n    if (unixfs && unixfs.type === 'hamt-sharded-directory') {\n      // special case - unixfs v1 hamt shards\n      linkCid = await findShardCid(node, toResolve[0], blockstore)\n    } else {\n      linkCid = findLinkCid(node, toResolve[0])\n    }\n\n    if (!linkCid) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND')\n    }\n\n    // remove the path component we have resolved\n    const nextName = toResolve.shift()\n    const nextPath = `${path}/${nextName}`\n\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName || '',\n      path: nextPath\n    }\n  }\n\n  return {\n    entry: {\n      type: unixfs.isDirectory() ? 'directory' : 'file',\n      name,\n      path,\n      cid,\n      // @ts-ignore\n      content: contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore),\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  }\n}\n\nmodule.exports = unixFsResolver\n","'use strict'\n\nconst errCode = require('err-code')\nconst extractDataFromBlock = require('../utils/extract-data-from-block')\nconst validateOffsetAndLength = require('../utils/validate-offset-and-length')\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n */\n\n/**\n * @param {Uint8Array} node\n */\nconst rawContent = (node) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * contentGenerator (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    yield extractDataFromBlock(node, 0, offset, offset + length)\n  }\n\n  return contentGenerator\n}\n\n/**\n * @type {import('../types').Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n\n  const block = await blockstore.get(cid, options)\n\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  }\n}\n\nmodule.exports = resolve\n","'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst errCode = require('err-code')\nconst dagCbor = require('@ipld/dag-cbor')\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid)\n  const object = dagCbor.decode(block)\n  let subObject = object\n  let subPath = path\n\n  while (toResolve.length) {\n    const prop = toResolve[0]\n\n    if (prop in subObject) {\n      // remove the bit of the path we have resolved\n      toResolve.shift()\n      subPath = `${subPath}/${prop}`\n\n      const subObjectCid = CID.asCID(subObject[prop])\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function * () {\n              yield object\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        }\n      }\n\n      subObject = subObject[prop]\n    } else {\n      // cannot resolve further\n      throw errCode(new Error(`No property named ${prop} found in cbor node ${cid}`), 'ERR_NO_PROP')\n    }\n  }\n\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function * () {\n        yield object\n      }\n    }\n  }\n}\n\nmodule.exports = resolve\n","'use strict'\n\nconst errCode = require('err-code')\nconst extractDataFromBlock = require('../utils/extract-data-from-block')\nconst validateOffsetAndLength = require('../utils/validate-offset-and-length')\nconst mh = require('multiformats/hashes/digest')\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @param {Uint8Array} node\n */\nconst rawContent = (node) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * contentGenerator (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    yield extractDataFromBlock(node, 0, offset, offset + length)\n  }\n\n  return contentGenerator\n}\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n  const buf = await mh.decode(cid.multihash.bytes)\n\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  }\n}\n\nmodule.exports = resolve\n","'use strict'\n\nconst errCode = require('err-code')\n\nconst dagPb = require('@ipld/dag-pb')\nconst dagCbor = require('@ipld/dag-cbor')\nconst raw = require('multiformats/codecs/raw')\nconst { identity } = require('multiformats/hashes/identity')\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n * @typedef {import('../types').Resolve} Resolve\n */\n\n/**\n * @type {{ [ key: string ]: Resolver }}\n */\nconst resolvers = {\n  [dagPb.code]: require('./unixfs-v1'),\n  [raw.code]: require('./raw'),\n  [dagCbor.code]: require('./dag-cbor'),\n  [identity.code]: require('./identity')\n}\n\n/**\n * @type {Resolve}\n */\nfunction resolve (cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code]\n\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for code ${cid.code}`), 'ERR_NO_RESOLVER')\n  }\n\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options)\n}\n\nmodule.exports = resolve\n","'use strict'\n\nconst errCode = require('err-code')\nconst { CID } = require('multiformats/cid')\nconst resolve = require('./resolvers')\nconst last = require('it-last')\n\n/**\n * @typedef {import('ipfs-unixfs').UnixFS} UnixFS\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').ExporterOptions} ExporterOptions\n * @typedef {import('./types').UnixFSFile} UnixFSFile\n * @typedef {import('./types').UnixFSDirectory} UnixFSDirectory\n * @typedef {import('./types').ObjectNode} ObjectNode\n * @typedef {import('./types').RawNode} RawNode\n * @typedef {import('./types').IdentityNode} IdentityNode\n * @typedef {import('./types').UnixFSEntry} UnixFSEntry\n */\n\nconst toPathComponents = (path = '') => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n\n/**\n * @param {string|Uint8Array|CID} path\n */\nconst cidAndRest = (path) => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    }\n  }\n\n  const cid = CID.asCID(path)\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    }\n  }\n\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6)\n    }\n\n    const output = toPathComponents(path)\n\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    }\n  }\n\n  throw errCode(new Error(`Unknown path type ${path}`), 'ERR_BAD_PATH')\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nasync function * walkPath (path, blockstore, options = {}) {\n  let {\n    cid,\n    toResolve\n  } = cidAndRest(path)\n  let name = cid.toString()\n  let entryPath = name\n  const startingDepth = toResolve.length\n\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options)\n\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n    }\n\n    if (result.entry) {\n      yield result.entry\n    }\n\n    if (!result.next) {\n      return\n    }\n\n    // resolve further parts\n    toResolve = result.next.toResolve\n    cid = result.next.cid\n    name = result.next.name\n    entryPath = result.next.path\n  }\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nasync function exporter (path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options))\n\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n  }\n\n  return result\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nasync function * recursive (path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options)\n\n  if (!node) {\n    return\n  }\n\n  yield node\n\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child\n    }\n  }\n\n  /**\n   * @param {UnixFSDirectory} node\n   * @param {ExporterOptions} options\n   * @returns {AsyncGenerator<UnixFSEntry, void, any>}\n   */\n  async function * recurse (node, options) {\n    for await (const file of node.content(options)) {\n      yield file\n\n      if (file instanceof Uint8Array) {\n        continue\n      }\n\n      if (file.type === 'directory') {\n        yield * recurse(file, options)\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  exporter,\n  walkPath,\n  recursive\n}\n","'use strict'\n\n/**\n * Can be used with Array.sort to sort and array with Uint8Array entries\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction compare (a, b) {\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] < b[i]) {\n      return -1\n    }\n\n    if (a[i] > b[i]) {\n      return 1\n    }\n  }\n\n  if (a.byteLength > b.byteLength) {\n    return 1\n  }\n\n  if (a.byteLength < b.byteLength) {\n    return -1\n  }\n\n  return 0\n}\n\nmodule.exports = compare\n","'use strict'\n\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction equals (a, b) {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = equals\n","'use strict'\n\nconst bases = require('./util/bases')\n\n/**\n * @typedef {import('./util/bases').SupportedEncodings} SupportedEncodings\n */\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array - The array to turn into a string\n * @param {SupportedEncodings} [encoding=utf8] - The encoding to use\n * @returns {string}\n */\nfunction toString (array, encoding = 'utf8') {\n  const base = bases[encoding]\n\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n\nmodule.exports = toString\n","'use strict'\n\n/**\n * Returns the xor distance between two arrays\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction xor (a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length')\n  }\n\n  const result = new Uint8Array(a.length)\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i]\n  }\n\n  return result\n}\n\nmodule.exports = xor\n","'use strict'\nconst compare = require('./compare')\nconst concat = require('./concat')\nconst equals = require('./equals')\nconst fromString = require('./from-string')\nconst toString = require('./to-string')\nconst xor = require('./xor')\n\nmodule.exports = {\n  compare,\n  concat,\n  equals,\n  fromString,\n  toString,\n  xor\n}\n","import { equals } from 'uint8arrays';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { BlockstoreAdapter } from 'interface-blockstore';\nexport class VerifyingGetOnlyBlockStore extends BlockstoreAdapter {\n    constructor(blockstore) {\n        super();\n        this.store = blockstore;\n    }\n    async get(cid) {\n        const res = await this.store.get(cid);\n        if (!res) {\n            throw new Error(`Incomplete CAR. Block missing for CID ${cid}`);\n        }\n        if (!isValid({ cid, bytes: res })) {\n            throw new Error(`Invalid CAR. Hash of block data does not match CID ${cid}`);\n        }\n        return res;\n    }\n    static fromBlockstore(b) {\n        return new VerifyingGetOnlyBlockStore(b);\n    }\n    static fromCarReader(cr) {\n        return new VerifyingGetOnlyBlockStore({\n            // Return bytes in the same fashion as a Blockstore implementation\n            get: async (cid) => {\n                const block = await cr.get(cid);\n                return block === null || block === void 0 ? void 0 : block.bytes;\n            }\n        });\n    }\n}\nasync function isValid({ cid, bytes }) {\n    const hash = await sha256.digest(bytes);\n    return equals(hash.digest, cid.multihash.digest);\n}\n","import toIterable from 'browser-readablestream-to-it';\nimport { CarBlockIterator } from '@ipld/car/iterator';\nimport exporter from 'ipfs-unixfs-exporter';\nimport { VerifyingGetOnlyBlockStore } from \"./utils/verifying-get-only-blockstore.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\n// Export unixfs entries from car file\nexport async function* unpack(carReader, roots) {\n    const verifyingBlockService = VerifyingGetOnlyBlockStore.fromCarReader(carReader);\n    if (!roots || roots.length === 0) {\n        roots = await carReader.getRoots();\n    }\n    for (const root of roots) {\n        yield* exporter.recursive(root, verifyingBlockService, { /* options */});\n    }\n}\nexport async function* unpackStream(readable, { roots, blockstore: userBlockstore } = {}) {\n    const carIterator = await CarBlockIterator.fromIterable(asAsyncIterable(readable));\n    const blockstore = userBlockstore || new MemoryBlockStore();\n    for await (const block of carIterator) {\n        await blockstore.put(block.cid, block.bytes);\n    }\n    const verifyingBlockStore = VerifyingGetOnlyBlockStore.fromBlockstore(blockstore);\n    if (!roots || roots.length === 0) {\n        roots = await carIterator.getRoots();\n    }\n    for (const root of roots) {\n        yield* exporter.recursive(root, verifyingBlockStore);\n    }\n}\n/**\n * Upgrade a ReadableStream to an AsyncIterable if it isn't already\n *\n * ReadableStream (e.g res.body) is asyncIterable in node, but not in chrome, yet.\n * see: https://bugs.chromium.org/p/chromium/issues/detail?id=929585\n */\nfunction asAsyncIterable(readable) {\n    // @ts-ignore how to convince tsc that we are checking the type here?\n    return Symbol.asyncIterator in readable ? readable : toIterable(readable);\n}\n","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import {\n  CarReader,\n  CarWriter\n} from '@ipld/car';\nimport { Block } from 'multiformats/block';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as cbor from '@ipld/dag-cbor';\nimport * as pb from '@ipld/dag-pb';\nexport class TreewalkCarSplitter {\n  constructor(reader, targetSize, options = {}) {\n    if (typeof targetSize !== 'number' || targetSize <= 0) {\n      throw new Error('invalid target chunk size');\n    }\n    this._reader = reader;\n    this._targetSize = targetSize;\n    this._decoders = [\n      pb,\n      raw,\n      cbor,\n      ...options.decoders || []\n    ];\n  }\n  async *cars() {\n    const roots = await this._reader.getRoots();\n    if (roots.length !== 1)\n      throw new Error(`unexpected number of roots: ${ roots.length }`);\n    let channel;\n    for await (const val of this._cars(roots[0])) {\n      channel = val.channel;\n      if (val.out)\n        yield val.out;\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    channel.writer.close();\n    yield channel.out;\n  }\n  async _get(cid) {\n    const rawBlock = await this._reader.get(cid);\n    if (!rawBlock)\n      throw new Error(`missing block for ${ cid }`);\n    const {bytes} = rawBlock;\n    const decoder = this._decoders.find(d => d.code === cid.code);\n    if (!decoder)\n      throw new Error(`missing decoder for ${ cid.code }`);\n    return new Block({\n      cid,\n      bytes,\n      value: decoder.decode(bytes)\n    });\n  }\n  async *_cars(cid, parents = [], channel = undefined) {\n    const block = await this._get(cid);\n    channel = channel || Object.assign(CarWriter.create(cid), { size: 0 });\n    if (channel.size > 0 && channel.size + block.bytes.byteLength >= this._targetSize) {\n      channel.writer.close();\n      const {out} = channel;\n      channel = newCar(parents);\n      yield {\n        channel,\n        out\n      };\n    }\n    parents = parents.concat(block);\n    channel.size += block.bytes.byteLength;\n    channel.writer.put(block);\n    for (const [, cid] of block.links()) {\n      for await (const val of this._cars(cid, parents, channel)) {\n        channel = val.channel;\n        yield val;\n      }\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    yield { channel };\n  }\n  static async fromIterable(iterable, targetSize, options) {\n    const reader = await CarReader.fromIterable(iterable);\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n  static async fromBlob(blob, targetSize, options) {\n    const buffer = await blob.arrayBuffer();\n    const reader = await CarReader.fromBytes(new Uint8Array(buffer));\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n}\nfunction newCar(parents) {\n  const ch = Object.assign(CarWriter.create(parents[0].cid), { size: parents.reduce((size, b) => size + b.bytes.byteLength, 0) });\n  for (const b of parents) {\n    ch.writer.put(b);\n  }\n  return ch;\n}","export async function getFilesFromPath() {\n  throw new Error('Unsupported in this environment');\n}\nexport async function* filesFromPath() {\n  throw new Error('Unsupported in this environment');\n}","// TODO: Use indexedDb\nimport { MemoryBlockStore } from 'ipfs-car/blockstore/memory'\n\nexport const fetch = globalThis.fetch\nexport const Request = globalThis.Request\nexport const Response = globalThis.Response\nexport const Blob = globalThis.Blob\nexport const File = globalThis.File\nexport const Blockstore = MemoryBlockStore\n","/**\n * A client library for the https://web3.storage/ service. It provides a convenient\n * interface for working with the [Raw HTTP API](https://web3.storage/#api-docs)\n * from a web browser or [Node.js](https://nodejs.org/) and comes bundled with\n * TS for out-of-the box type inference and better IntelliSense.\n *\n * @example\n * ```js\n * import { Web3Storage, File } from 'web3.storage'\n * const client = new Web3Storage({ token: API_TOKEN })\n *\n * const cid = await client.put([new File(['hello world'], 'hello.txt', { type: 'text/plain' })])\n * ```\n * @module\n */\nimport { transform } from 'streaming-iterables'\nimport pRetry from 'p-retry'\nimport { pack } from 'ipfs-car/pack'\nimport parseLink from 'parse-link-header'\nimport { unpackStream } from 'ipfs-car/unpack'\nimport { TreewalkCarSplitter } from 'carbites/treewalk'\nimport { CarReader } from '@ipld/car'\nimport { filesFromPath, getFilesFromPath } from 'files-from-path'\nimport {\n  fetch,\n  File,\n  Blob,\n  Blockstore\n} from './platform.js'\n\nconst MAX_PUT_RETRIES = 5\nconst MAX_CONCURRENT_UPLOADS = 3\nconst MAX_CHUNK_SIZE = 1024 * 1024 * 10 // chunk to ~10MB CARs\n\n/** @typedef { import('./lib/interface.js').API } API */\n/** @typedef { import('./lib/interface.js').Status} Status */\n/** @typedef { import('./lib/interface.js').Upload} Upload */\n/** @typedef { import('./lib/interface.js').Service } Service */\n/** @typedef { import('./lib/interface.js').Web3File} Web3File */\n/** @typedef { import('./lib/interface.js').Filelike } Filelike */\n/** @typedef { import('./lib/interface.js').CIDString} CIDString */\n/** @typedef { import('./lib/interface.js').PutOptions} PutOptions */\n/** @typedef { import('./lib/interface.js').PutCarOptions} PutCarOptions */\n/** @typedef { import('./lib/interface.js').UnixFSEntry} UnixFSEntry */\n/** @typedef { import('./lib/interface.js').Web3Response} Web3Response */\n\n/**\n * @implements Service\n */\nclass Web3Storage {\n  /**\n   * Constructs a client bound to the given `options.token` and\n   * `options.endpoint`.\n   *\n   * @example\n   * ```js\n   * import { Web3Storage } from 'web3.storage'\n   * const client = new Web3Storage({ token: API_TOKEN })\n   * ```\n   *\n   * @param {{token: string, endpoint?:URL}} options\n   */\n  constructor ({ token, endpoint = new URL('https://api.web3.storage') }) {\n    /**\n     * Authorization token.\n     *\n     * @readonly\n     */\n    this.token = token\n    /**\n     * Service API endpoint `URL`.\n     * @readonly\n     */\n    this.endpoint = endpoint\n  }\n\n  /**\n   * @hidden\n   * @param {string} token\n   * @returns {Record<string, string>}\n   */\n  static headers (token) {\n    if (!token) throw new Error('missing token')\n    return {\n      Authorization: `Bearer ${token}`,\n      'X-Client': 'web3.storage'\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async put ({ endpoint, token }, files, {\n    onRootCidReady,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    wrapWithDirectory = true,\n    name\n  } = {}) {\n    const blockstore = new Blockstore()\n    try {\n      const { out, root } = await pack({\n        input: Array.from(files).map((f) => ({\n          path: f.name,\n          content: f.stream()\n        })),\n        blockstore,\n        wrapWithDirectory,\n        maxChunkSize: 1048576,\n        maxChildrenPerNode: 1024\n      })\n      onRootCidReady && onRootCidReady(root.toString())\n      const car = await CarReader.fromIterable(out)\n      return await Web3Storage.putCar({ endpoint, token }, car, { onStoredChunk, maxRetries, name })\n    } finally {\n      await blockstore.close()\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async putCar ({ endpoint, token }, car, {\n    name,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES\n  } = {}) {\n    const targetSize = MAX_CHUNK_SIZE\n    const url = new URL('/car', endpoint)\n    let headers = Web3Storage.headers(token)\n\n    if (name) {\n      headers = { ...headers, 'X-Name': name }\n    }\n\n    const roots = await car.getRoots()\n    if (roots[0] == null) {\n      throw new Error('missing root CID')\n    }\n    if (roots.length > 1) {\n      throw new Error('too many roots')\n    }\n\n    const carRoot = roots[0].toString()\n    const splitter = new TreewalkCarSplitter(car, targetSize)\n\n    /**\n     * @param {AsyncIterable<Uint8Array>} car\n     * @returns {Promise<CIDString>}\n     */\n    const onCarChunk = async car => {\n      const carParts = []\n      for await (const part of car) {\n        carParts.push(part)\n      }\n\n      const carFile = new Blob(carParts, { type: 'application/car' })\n      const res = await pRetry(\n        async () => {\n          const request = await fetch(url.toString(), {\n            method: 'POST',\n            headers,\n            body: carFile\n          })\n          const res = await request.json()\n          if (!request.ok) {\n            throw new Error(res.message)\n          }\n\n          if (res.cid !== carRoot) {\n            throw new Error(`root CID mismatch, expected: ${carRoot}, received: ${res.cid}`)\n          }\n          return res.cid\n        },\n        { retries: maxRetries }\n      )\n\n      onStoredChunk && onStoredChunk(carFile.size)\n      return res\n    }\n\n    const upload = transform(MAX_CONCURRENT_UPLOADS, onCarChunk)\n    for await (const _ of upload(splitter.cars())) {} // eslint-disable-line\n    return carRoot\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<Web3Response | null>}\n   */\n  static async get ({ endpoint, token }, cid) {\n    const url = new URL(`/car/${cid}`, endpoint)\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token)\n    })\n    return toWeb3Response(res)\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<CIDString>}\n   */\n  /* c8 ignore next 4 */\n  static async delete ({ endpoint, token }, cid) {\n    console.log('Not deleting', cid, endpoint, token)\n    throw Error('.delete not implemented yet')\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @returns {Promise<Status | undefined>}\n   */\n  static async status ({ endpoint, token }, cid) {\n    const url = new URL(`/status/${cid}`, endpoint)\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token)\n    })\n    if (res.status === 404) {\n      return undefined\n    }\n    if (!res.ok) {\n      throw new Error(res.statusText)\n    }\n    return res.json()\n  }\n\n  /**\n   * @param {Service} service\n   * @param {object} [opts]\n   * @param {string} [opts.before] list items uploaded before this ISO 8601 date string\n   * @param {number} [opts.maxResults] maximum number of results to return\n   * @returns {AsyncIterable<Upload>}\n   */\n  static async * list (service, { before = new Date().toISOString(), maxResults = Infinity } = {}) {\n  /**\n   * @param {Service} service\n   * @param {{before: string, size: number}} opts\n   * @returns {Promise<Response>}\n   */\n    function listPage ({ endpoint, token }, { before, size }) {\n      const search = new URLSearchParams({ before, size: size.toString() })\n      const url = new URL(`/user/uploads?${search}`, endpoint)\n      return fetch(url.toString(), {\n        method: 'GET',\n        headers: {\n          ...Web3Storage.headers(token),\n          'Access-Control-Request-Headers': 'Link'\n        }\n      })\n    }\n    let count = 0\n    const size = maxResults > 100 ? 100 : maxResults\n    for await (const res of paginator(listPage, service, { before, size })) {\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}`)\n      }\n      const page = await res.json()\n      for (const upload of page) {\n        if (++count > maxResults) {\n          return\n        }\n        yield upload\n      }\n    }\n  }\n\n  // Just a sugar so you don't have to pass around endpoint and token around.\n\n  /**\n   * Uploads files to web3.storage. Files are hashed in the client and uploaded as a single\n   * [Content Addressed Archive(CAR)](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md).\n   * Takes a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * const file = new File(['hello world'], 'hello.txt', { type: 'text/plain' })\n   * const cid = await client.put([file])\n   * ```\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   */\n  put (files, options) {\n    return Web3Storage.put(this, files, options)\n  }\n\n  /**\n   * Uploads a CAR ([Content Addressed Archive](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md)) file to web3.storage.\n   * Takes a CarReader interface from @ipld/car\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * import fs from 'fs'\n   * import { Readable } from 'stream'\n   * import { CarReader, CarWriter } from '@ipld/car'\n   * import * as raw from 'multiformats/codecs/raw'\n   * import { CID } from 'multiformats/cid'\n   * import { sha256 } from 'multiformats/hashes/sha2'\n   *\n   * async function getCar() {\n   *    const bytes = new TextEncoder().encode('random meaningless bytes')\n   *    const hash = await sha256.digest(raw.encode(bytes))\n   *    const cid = CID.create(1, raw.code, hash)\n   *\n   *    // create the writer and set the header with a single root\n   *    const { writer, out } = await CarWriter.create([cid])\n   *    Readable.from(out).pipe(fs.createWriteStream('example.car'))\n\n   *    // store a new block, creates a new file entry in the CAR archive\n   *    await writer.put({ cid, bytes })\n   *    await writer.close()\n\n   *    const inStream = fs.createReadStream('example.car')\n   *    // read and parse the entire stream in one go, this will cache the contents of\n   *    // the car in memory so is not suitable for large files.\n   *    const reader = await CarReader.fromIterable(inStream)\n   *    return reader\n   * }\n   *\n   * const car = await getCar()\n   * const cid = await client.putCar(car)\n   * ```\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   */\n  putCar (car, options) {\n    return Web3Storage.putCar(this, car, options)\n  }\n\n  /**\n   * Fetch the Content Addressed Archive by its root CID.\n   * @param {CIDString} cid\n   */\n  get (cid) {\n    return Web3Storage.get(this, cid)\n  }\n\n  /**\n   * @param {CIDString} cid\n   */\n  /* c8 ignore next 3 */\n  delete (cid) {\n    return Web3Storage.delete(this, cid)\n  }\n\n  /**\n   * Fetch info on Filecoin deals and IPFS pins that a given CID is replicated in.\n   * @param {CIDString} cid\n   */\n  status (cid) {\n    return Web3Storage.status(this, cid)\n  }\n\n  /**\n   * Find all uploads for this account. Use a `for await...of` loop to fetch them all.\n   * @example\n   * Fetch all the uploads\n   * ```js\n   * const uploads = []\n   * for await (const item of client.list()) {\n   *    uploads.push(item)\n   * }\n   * ```\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n   * @param {object} [opts]\n   * @param {string} [opts.before] list items uploaded before this ISO 8601 date string\n   * @param {number} [opts.maxResults] maximum number of results to return\n   * @returns {AsyncIterable<Upload>}\n   */\n  list (opts) {\n    return Web3Storage.list(this, opts)\n  }\n}\n\n/**\n * Map a UnixFSEntry to a File with a cid property\n * @param {UnixFSEntry} entry\n * @returns {Promise<Web3File>}\n */\nasync function toWeb3File ({ content, path, cid }) {\n  const chunks = []\n  for await (const chunk of content()) {\n    chunks.push(chunk)\n  }\n  const file = new File(chunks, toFilenameWithPath(path))\n  return Object.assign(file, { cid: cid.toString() })\n}\n\n/**\n * Trim the root cid from the path if there is anyting after it.\n * bafy...ic2q/path/to/pinpie.jpg => path/to/pinpie.jpg\n *         bafy...ic2q/pinpie.jpg => pinpie.jpg\n *                    bafk...52zy => bafk...52zy\n * @param {string} unixFsPath\n * @returns {string}\n */\nfunction toFilenameWithPath (unixFsPath) {\n  const slashIndex = unixFsPath.indexOf('/')\n  return slashIndex === -1 ? unixFsPath : unixFsPath.substring(slashIndex + 1)\n}\n\n/**\n * Add car unpacking smarts to the response object,\n * @param {Response} res\n * @returns {Web3Response}\n */\nfunction toWeb3Response (res) {\n  const response = Object.assign(res, {\n    unixFsIterator: async function * () {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .unixFsIterator`)\n      }\n      /* c8 ignore next 3 */\n      if (!res.body) {\n        throw new Error('No body on response')\n      }\n      const blockstore = new Blockstore()\n      try {\n        for await (const entry of unpackStream(res.body, { blockstore })) {\n          yield entry\n        }\n      } finally {\n        await blockstore.close()\n      }\n    },\n    files: async () => {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .files`)\n      }\n      const files = []\n      // @ts-ignore we're using the enriched response here\n      for await (const entry of response.unixFsIterator()) {\n        if (entry.type === 'directory') {\n          continue\n        }\n        const file = await toWeb3File(entry)\n        files.push(file)\n      }\n      return files\n    }\n  })\n  return response\n}\n\n/**\n * Follow Link headers on a Response, to fetch all the things.\n *\n * @param {(service: Service, opts: any) => Promise<Response>} fn\n * @param {Service} service\n * @param {{}} opts\n */\nasync function * paginator (fn, service, opts) {\n  let res = await fn(service, opts)\n  yield res\n  let link = parseLink(res.headers.get('Link') || '')\n  // @ts-ignore\n  while (link && link.next) {\n    // @ts-ignore\n    res = await fn(service, link.next)\n    yield res\n    link = parseLink(res.headers.get('Link') || '')\n  }\n}\n\nexport { Web3Storage, File, Blob, filesFromPath, getFilesFromPath }\n\n/**\n * Just to verify API compatibility.\n * TODO: convert lib to a regular class that can be type checked.\n * @type {API}\n */\nconst api = Web3Storage\nvoid api // eslint-disable-line no-void\n"],"names":["getIterator","iterable","next","Symbol","iterator","asyncIterator","TypeError","defer","reject","resolve","promise","Promise","resolveFunc","rejectFunc","_transform","concurrency","func","resultQueue","readQueue","ended","reading","inflightCount","lastError","fulfillReadQueue","length","shift","done","value","undefined","async","fillQueue","itrValue","push","error","mapAndQueue","asyncIterableIterator","deferred","transform","curriedFunc","curriedIterable","RetryOperation","timeouts","options","forever","this","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","maxRetryTime","Infinity","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_timer","_cachedTimeouts","slice","retry_operation","prototype","reset","stop","clearTimeout","retry","err","currentTime","Date","getTime","unshift","Error","timeout","splice","self","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","message","count","require$$0","exports","retries","Array","concat","opts","factor","minTimeout","maxTimeout","randomize","key","createTimeout","sort","a","b","random","Math","round","max","pow","min","obj","methods","method","original","op","operation","args","call","arguments","callback","pop","apply","bind","networkErrorMsgs","AbortError","constructor","super","originalError","stack","name","decorateErrorWithCounts","attemptNumber","retriesLeft","isNetworkError","errorMessage","includes","pRetry","input","onFailedAttempt","pRetryModule","last","source","res","entry","itLast","rawPipe","fns","isIterable","isDuplex","sink","duplexPipelineFn","duplex","pipe","itPipeModule","encode_1","encode","MSB","REST","MSBALL","INT","num","out","offset","Number","MAX_SAFE_INTEGER","bytes","RangeError","oldOffset","decode","read","buf","counter","l","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","require$$1","encodingLength","require$$2","MSB$1","REST$1","_brrp_varint","data","encodeTo","int","target","empty","Uint8Array","toHex","d","reduce","hex","byte","toString","padStart","fromHex","hexes","match","map","parseInt","equals","aa","bb","byteLength","ii","coerce","o","ArrayBuffer","isView","buffer","byteOffset","isBinary","fromString","str","TextEncoder","TextDecoder","create","code","digest","size","sizeOffset","varint.encodingLength","digestOffset","varint.encodeTo","set","Digest","multihash","varint.decode","subarray","equalBytes","base","ALPHABET","BASE_MAP","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","isArray","from","pbegin","pend","b58","it1","it2","repeat","string","src","_brrp__multiformats_scope_baseX","Encoder","prefix","baseEncode","Decoder","baseDecode","text","or","decoder","decoders","ComposedDecoder","other","Object","keys","Codec","encoder","baseX","alphabet","basex","bitsPerChar","codes","end","bits","written","SyntaxError","pad","mask","rfc4648","base58btc","base58flickr","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","CID","version","asCID","_baseCache","Map","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","Digest.create","createV1","Digest.equals","toStringV0","toStringV1","toJSON","hash","get","toStringTag","for","isCID","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","encodeCID","Digest.decode","cid","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","Digest.Digest","multihashCode","initialBytes","parseCIDtoBytes","cache","codeOffset","hashOffset","writable","configurable","enumerable","range","test","warn","typeofs","objectTypeNames","is","typeOf","isBuffer","objectType","getObjectType","objectTypeName","Type","major","terminal","majorEncoded","compare","typ","uint","negint","array","tag","float","false","true","null","break","Token","type","encodedLength","encodedBytes","useBuffer","globalThis","process","browser","Buffer","textDecoder","textEncoder","asU8A","utf8Slice","utf8ToBytes","fromArray","arr","chunks","c","off","alloc","allocUnsafe","b1","b2","units","codePoint","leadSurrogate","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","len","String","fromCharCode","defaultChunkSize","Bl","chunkSize","cursor","maxCursor","_initReuseChunk","topChunk","chunkPos","toBytes","byts","chunk","decodeErrPrefix","encodeErrPrefix","assertEnoughData","pos","need","uintBoundaries","BigInt","readUint8","strict","readUint16","readUint32","readUint64","hi","lo","allowBigInt","decodeUint8","_minor","decodeUint16","decodeUint32","decodeUint64","encodeUint","token","encodeUintValue","nuint","buint","decodeNegint8","uint.readUint8","decodeNegint16","uint.readUint16","decodeNegint32","uint.readUint32","encodedSize","compareTokens","tok1","tok2","neg1b","pos1b","decodeNegint64","uint.readUint64","MIN_SAFE_INTEGER","encodeNegint","unsigned","uint.encodeUintValue","toToken","decodeBytesCompact","minor","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","tokenBytes","encodeBytes","compareBytes","totLength","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","uint.uintBoundaries","encodeString","_data","_pos","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","allowIndefinite","encodeArray","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","encodeMap","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","encodeTag","uint.encodeUint","MINOR_FALSE","MINOR_TRUE","MINOR_NULL","MINOR_UNDEFINED","decodeUndefined","allowUndefined","decodeBreak","createToken","allowNaN","isNaN","allowInfinity","decodeFloat16","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","decoded","success","float64","encodeFloat16","ui8a","encodeFloat32","encodeFloat64","dataView","DataView","inp","setUint16","setFloat32","valu32","getUint32","exponent","mantissa","logicalExponent","half","NaN","exp","mant","val","getFloat32","setFloat64","getFloat64","invalidMinor","errorer","msg","jump","uint.decodeUint8","uint.decodeUint16","uint.decodeUint32","uint.decodeUint64","negint.decodeNegint8","negint.decodeNegint16","negint.decodeNegint32","negint.decodeNegint64","bytes.decodeBytesCompact","bytes.decodeBytes8","bytes.decodeBytes16","bytes.decodeBytes32","bytes.decodeBytes64","string.decodeStringCompact","string.decodeString8","string.decodeString16","string.decodeString32","string.decodeString64","array.decodeArrayCompact","array.decodeArray8","array.decodeArray16","array.decodeArray32","array.decodeArray64","array.decodeArrayIndefinite","map.decodeMapCompact","map.decodeMap8","map.decodeMap16","map.decodeMap32","map.decodeMap64","map.decodeMapIndefinite","tag.decodeTagCompact","tag.decodeTag8","tag.decodeTag16","tag.decodeTag32","tag.decodeTag64","float.decodeUndefined","float.decodeFloat16","float.decodeFloat32","float.decodeFloat64","float.decodeBreak","quick","quickEncodeToken","defaultEncodeOptions","mapSorter","cborEncoders","Ref","parent","p","createCheck","simpleTokens","emptyArray","emptyMap","typeEncoders","number","_typ","_refStack","isInteger","isSafeInteger","bigint","boolean","_obj","refStack","addBreakTokens","entries","e","objectToTokens","isMap","sortMapEntries","split","customTypeEncoder","tokens","typeEncoder","e1","e2","keyToken1","keyToken2","tcmp","tokensToEncoded","encoders","encodeCustom","quickBytes","assign","defaultDecodeOptions","Tokeniser","byt","DONE","BREAK","tokenToArray","tokeniser","tokensToObject","tokenToMap","useMaps","m","tags","tagged","tokenizer","CID_CBOR_TAG","cidEncoder","cborg.Token","cborg.Type","undefinedEncoder","numberEncoder","encodeOptions","cidDecoder","decodeOptions","node","cborg.encode","cborg.decode","CIDV0_BYTES","SHA2_256","LENGTH","DAG_PB","readVarint","reader","upTo","seek","readHeader","header","exactly","block","decodeDagCbor","roots","filter","readMultihash","codeLength","mhLength","readCid","first","readBlockHead","blockLength","readBlock","readBlockIndex","index","blockOffset","createDecoder","headerPromise","blocks","blocksIndex","bytesReader","chunkReader","readChunk","have","currentChunk","bufa","asyncIterableReader","asyncIterable","CarReader","_version","_roots","_blocks","_keys","getRoots","has","indexOf","cids","fromBytes","decodeReaderComplete","fromIterable","CarIteratorBase","_iterable","_decoded","CarBlockIterator","decodeIterator","createHeader","headerBytes","dagCborEncode","varintBytes","createEncoder","writer","setRoots","write","writeBlock","close","noop","chunkQueue","drainer","drainerResolver","outWait","outWaitResolver","makeDrainer","CarWriter","_encoder","_mutex","_ended","put","then","toRoots","encodeWriter","CarWriterOut","createAppender","updateRootsInBytes","newHeader","_iterator","_iterating","iw","iteratorChannel","root","_root","batch","things","thing","itBatch","parallelBatch","tasks","ok","result","itParallelBatch","isPlainObj","getPrototypeOf","isOptionObject","hasOwnProperty","propertyIsEnumerable","defineProperty","object","defaultMergeOptions","concatArrays","ignoreUndefined","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","symbol","clone","cloneArray","cloneOptionObject","forEach","mergeKeys","merged","config","merge","resultIndex","indices","k","mergeOptions","_","option","Hasher","sha","crypto","subtle","sha256","sha512","library","x86","x64","inputValidation","_validBytes","_x86Multiply","n","_x86Rotl","_x86Fmix","h","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","hash32","seed","h1","k1","c1","c2","hash128","h2","h3","h4","k2","k3","k4","c3","c4","module","murmurhash3jsRevisited","identity","base2","base8","base10","base16","base16upper","base36","base36upper","base64","base64pad","base64url","base64urlpad","raw","json","bases","identityBase","base58","hashes","sha2","codecs","createCodec","substring","ascii","BASES","utf8","latin1","binary","bases_1","encoding","fromString_1","mur","uint8ArrayFromString","require$$3","hamtHashFn","reverse","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","hasher","leafType","cidVersion","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","window","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hamtHashCode","hamtBucketBits","aspromise","asPromise","ctx","params","pending","ceil","b64","s64","t","parts","join","invalidEncoding","eventemitter","EventEmitter","_listeners","on","evt","listeners","emit","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","floor","LN2","readFloat_ieee754","readUint","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","inquire_1","inquire","moduleName","mod","eval","replace","pool_1","pool","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","low","high","toLong","Boolean","fromHash","toHash","part0","part1","part2","dst","ifNotSet","newError","CustomError","properties","captureStackTrace","require$$4","require$$5","require$$6","require$$7","isNode","global","versions","freeze","emptyObject","isFinite","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","_configure","Writer","BufferWriter","Op","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","Reader","BufferReader","indexOutOfRange","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","protobuf","configure","build","rpc","minimal","$protobuf","$Reader","$Writer","$util","$root","Data","blocksizes","ks","valuesById","values","filesize","hashType","fanout","mode","mtime","w","UnixTime","r","instance","fromObject","fromValue","toObject","arrays","defaults","DataType","Seconds","FractionalNanoseconds","Metadata","MimeType","unixfs","props","createError","ErrClass","errCode","PBData","errcode","types","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","parseMode","parseMtime","secs","nsecs","ms","unmarshal","marshaled","objects","blockSizes","_originalMode","_mode","isDirectory","parsedMode","addBlockSize","removeBlockSize","fileSize","sum","marshal","Raw","Directory","File","Symlink","HAMTShard","parsed","pbData","UnixFS","decodeVarint","v","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","link","fieldNum","Hash","Name","Tsize","decodeNode","links","linksBeforeData","Links","maxInt32","maxUInt32","encodeLink","encodeVarint","nameBytes","encodeNode","sizeNode","sizeLink","sov","len64","len8tab","pbNodeProperties","pbLinkProperties","linkComparator","abuf","bbuf","y","hasOnlyProperties","some","asLink","pbl","prepare","pbn","validate","createNode","createLink","dagPb","persist","blockstore","signal","persist_1","dirBuilder","item","path","dir","all","itAll","flat","balanced","reduceToParents","chunked","balanced_1","trickle","Root","iteration","maxDepth","subTree","layer","isFull","addChild","SubTree","append","currentDepth","children","depth","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","child","bufferImporter","file","content","bufferImporter_1","rawCodec","dagBuilders","require$$8","buildFileBatch","previous","require$$9","single","leaves","leaf","f","acc","curr","fileBuilder","dagBuilder","BufferList","_init","_bufs","_new","_offset","tot","_t","_reverseOffset","blOffset","bufferId","dstStart","srcStart","srcEnd","bufoff","shallowSlice","startOffset","endOffset","buffers","consume","trunc","duplicate","_appendBuffer","_isBufferList","search","blIndex","buffOffset","buff","nativeSearchResult","revOffset","_match","searchOffset","readInt32BE","readInt32LE","readUInt32BE","readUInt32LE","readInt16BE","readInt16LE","readUInt16BE","readUInt16LE","readInt8","readUInt8","readIntBE","readIntLE","readUIntBE","readUIntLE","isBufferList","BufferList_1","Rabin","asModule","windowSize","rabin","fingerprint","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengthsPtr","Int32Array","pointer","processed","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","ptr","U32","Uint32Array","U16","Uint16Array","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","line","colm","trace","postInstantiate","rawExports","table","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","Int8Array","Int16Array","BigInt64Array","__getArrayView","align","getTypedArray","getTypedArrayView","bufPtr","__allocString","__getString","view","__getArray","__getArrayBuffer","__getInt8Array","__getInt8ArrayView","__getUint8Array","__getUint8ArrayView","__getUint8ClampedArray","Uint8ClampedArray","__getUint8ClampedArrayView","__getInt16Array","__getInt16ArrayView","__getUint16Array","__getUint16ArrayView","__getInt32ArrayView","__getUint32Array","__getUint32ArrayView","__getInt64Array","__getInt64ArrayView","__getUint64Array","__getUint64ArrayView","__getFloat32Array","__getFloat32ArrayView","__getFloat64Array","__getFloat64ArrayView","__instanceof","baseId","demangle","isResponse","Response","instantiate","instantiateStreaming","WebAssembly","Module","compile","instantiateSync","Instance","arrayBuffer","setArgumentsLength","internalName","elem","part","className","classElem","ctor","wrap","valueOf","thisValue","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","loadWebAssembly","imp","supported","wasm","Blob","rabinWasm","getRabin","avg","compiled","rabin_1","sizepow","log2","sizes","fixedSize","bl","currentLength","emitted","newBl","validateChunks","validateChunks_1","isAsyncIterable","contentAsAsyncIterable","chunkValidator","dagBuilder_1","Dir","dirty","parentKey","eachChildSeries","flush","DirFlat","_children","childCount","directChildrenCount","onlyChild","dirFlat","BITS_PER_BYTE","sparseArray","_bitArrays","_length","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","unset","_sortData","mapped","reducer","initialValue","find","finder","found","noCreate","bytePos","_bytePosFor","bitPos","popCountReduce","popCount","targetLength","randomIndex","sortInternal","bitField","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","compactArray","valueOnly","_v","SparseArray","Bucket","posAtParent","_popCount","_parent","_posAtParent","place","_findNewBucketAndPos","bucket","_putAt","_findChild","del","_findPlace","_at","_delAt","leafCount","childrenCount","eachLeafSeries","serialize","asyncTransform","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","tableSize","hashValue","take","existingChild","_putObjectAt","newPlace","_level","exists","untake","nodes","output","mappedChildren","START_MASKS","STOP_MASKS","consumableBuffer","_value","_currentBytePos","_currentBitPos","availableBits","totalBits","pendingBits","_haveBits","taking","byteBitsToInt","maskFor","concat_1","ConsumableBuffer","uint8ArrayConcat","wrapHash","hashFn","InfiniteHash","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","_produceMoreBits","available","availableForUntake","consumableHashModule","createHAMT","bucketOptions","DirSharded","_bucket","dirSharded","shardRoot","childrenSize","labelPrefix","toUpperCase","shard","subShard","flushedDir","label","flatToShard","threshold","newDir","convertToShard","oldDir","toPathComponents","trim","toPathComponents_1","addToTree","tree","pathElems","lastIndex","currentPath","pathElem","flushAndYield","treeBuilder","unwrapped","treeBuilder_1","importer","candidates","browserReadableStreamToIt","stream","getReader","preventCancel","cancel","releaseLock","browserReadablestreamToIt","blobToIt","blob","body","blobToIt_1","peekableIterator","queue","peek","itPeekable","itMap","isBytes","isBlob","isFileObject","isReadableStream","utils","browserStreamToIt","toAsyncIterable","peekable","normaliseContent","normaliseInput","toFileObject","normaliseInput_1","drain","itDrain","itFilter","limit","items","itTake","sortAll","sorter","BlockstoreAdapter","open","delete","putMany","getMany","deleteMany","puts","dels","commit","_all","q","_allKeys","query","it","startsWith","filters","orders","queryKeys","adapter","notFoundError","Adapter","Errors","MemoryBlockstore","MemoryBlockStore","store","cidStr","clear","unixfsImporterOptionsDefault","pack","userBlockstore","rootEntry","normalizeAddInput","immutable","extend","qs","url","xtend","hasRel","rel","intoRels","createObjects","parseLink","linkUrl","parsedUrl","qry","parseLinkHeader","linkHeader","addLinksToHamtBucket","rootBucket","toPrefix","position","toBucketPath","findShardCid","context","hamtDepth","lastBucket","bucketPath","entryPrefix","entryName","findCidInShard","extractDataFromBlock","blockStart","requestedStart","requestedEnd","blockEnd","validateOffsetAndLength","validateOffsetAndLength_1","dagCbor","emitBytes","streamPosition","childStart","childLink","childEnd","fileContent","directoryContent","directory","hamtShardedDirectoryContent","listDirectory","hamtShardedDirectory","findLinkCid","contentExporters","metadata","symlink","unixFsResolver","toResolve","linkCid","nextName","unixfsV1","rawContent","subObject","subPath","subObjectCid","dagCbor_1","mh","resolvers","resolver","resolvers_1","cidAndRest","walkPath","entryPath","startingDepth","exporter","recurse","compare_1","equals_1","toString_1","xor","xor_1","uint8arrays","VerifyingGetOnlyBlockStore","isValid","fromBlockstore","fromCarReader","cr","unpackStream","readable","carIterator","asAsyncIterable","verifyingBlockStore","toIterable","element","elementPath","remaining","Block","asBlock","TreewalkCarSplitter","targetSize","_reader","_targetSize","_decoders","pb","cbor","cars","channel","_cars","_get","rawBlock","parents","newCar","fromBlob","ch","getFilesFromPath","filesFromPath","fetch","Blockstore","MAX_PUT_RETRIES","MAX_CONCURRENT_UPLOADS","MAX_CHUNK_SIZE","Web3Storage","endpoint","URL","headers","Authorization","files","onRootCidReady","onStoredChunk","maxRetries","car","putCar","carRoot","splitter","upload","carParts","carFile","toWeb3Response","status","statusText","list","before","toISOString","maxResults","paginator","URLSearchParams","page","toWeb3File","toFilenameWithPath","unixFsPath","slashIndex","unixFsIterator"],"mappings":"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"}